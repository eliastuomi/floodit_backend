{"version":3,"sources":["reducers/mainReducer.js","store.js","services/room.js","components/Join.js","components/Settings.js","components/Graphics.js","components/GameButtons.js","components/Progress.js","components/Game.js","components/Chat.js","components/Room.js","App.js","index.js"],"names":["initialState","gameGrid","playerNumber","playerTurn","colorNumber","w","h","setGameState","data","type","setGameVisible","setGameover","setCurrentRoom","setRoomId","setShowRooms","mainReducer","gameStateReducer","state","action","gameVisibleReducer","userReducer","currentRoomReducer","roomIdReducer","showRoomsReducer","gameOverReducer","reducer","combineReducers","gameState","currentRoom","gameVisible","user","roomId","showRooms","gameOver","store","createStore","composeWithDevTools","applyMiddleware","thunk","baseUrl","room","getAll","a","axios","get","response","create","newRoom","post","remove","id","delete","join","roomObject","put","Join","props","useState","availableRooms","setAvailableRooms","socketRef","useRef","useEffect","roomService","then","filter","r","users","length","catch","error","console","log","current","socketIOClient","on","map","disconnect","roomName","Button","variant","onClick","handleJoinRoom","concat","nickName","Settings","dispatch","useDispatch","useSelector","settings","setSettings","cn","pn","handleSettingsChange","event","component","Number","target","value","Form","Group","controlId","Label","Badge","className","Control","min","max","onChange","e","block","newGameState","handleSubmit","Graphics","canvasRef","blockSize","getColor","colorIndex","checkNeighbour","grid","x","y","ctx","clearRect","fillStyle","fillRect","beginPath","strokeStyle","moveTo","lineTo","stroke","closePath","draw","getContext","ref","width","height","style","outline","display","marginLeft","marginRight","GameButtons","availableColors","pColors","i","push","c","getAvailableColors","buttonstyle","textAlect","justifyContent","color","backgroundColor","clickable","disabled","playTurnButtonHandler","Progress","getVariant","ret","all","p","playerProgress","prog","ProgressBar","animated","now","label","Game","currentTurn","startingPoint","randomizeGrid","previous","rand","Math","random","floor","gameIsOver","tGrid","b","flat","tempGrid","recursionfunc","playTurn","col","colorChangedGrid","tempToOriginal","handleUpdate","Row","Col","md","span","offset","isHost","g","newGrid","slice","handleStart","newGame","me","Chat","message","setMessage","Table","chatLog","m","sender","InputGroup","aria-describedby","placeholder","Append","handleSendChat","Room","setNickName","setChatLog","emit","alert","window","addEventListener","pageRefresh","removeEventListener","handleLeaveHost","handleLeave","handleCreate","createdRoom","deletedRoom","u","updatedRoom","joinedRoom","host","handleShowRooms","chatObject","size","text","App","loggedUserJSON","localStorage","getItem","JSON","parse","Container","fluid","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d31d4a33.chunk.js","sourcesContent":["\nconst initialState = {\n    gameGrid: [],\n    playerNumber: 1,\n    playerTurn:1,\n    colorNumber: 5,\n    w: 10,\n    h: 10,\n}\n\nconst gameStateReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SET_GAMESTATE':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport const setGameState = (data) => {\n    return {\n        type: 'SET_GAMESTATE',\n        data: data\n    }\n}\n\n\nconst gameVisibleReducer = (state = false, action) => {\n    switch (action.type) {\n        case 'SET_GAME_VISIBLE':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport const setGameVisible = (data) => {\n\n    return {\n        type: 'SET_GAME_VISIBLE',\n        data: data\n    }\n}\n\nconst gameOverReducer = (state = true, action) => {\n    switch (action.type) {\n        case 'SET_GAME_OVER':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport const setGameover = (data) => {\n\n    return {\n        type: 'SET_GAME_OVER',\n        data: data\n    }\n}\n\nconst userReducer = (state = null, action) => {\n    switch (action.type) {\n        case 'SET_USER':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport const setUser = (data) => {\n\n    return {\n        type: 'SET_USER',\n        data: data\n    }\n}\n\nconst currentRoomReducer = (state = null, action) => {\n    switch (action.type) {\n        case 'SET_CURRENT_ROOM':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport const setCurrentRoom = (data) => {\n\n    return {\n        type: 'SET_CURRENT_ROOM',\n        data: data\n    }\n}\n\nconst roomIdReducer = (state = null, action) => {\n    switch (action.type) {\n        case 'SET_ROOMID':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport const setRoomId = (data) => {\n\n    return {\n        type: 'SET_ROOMID',\n        data: data\n    }\n}\n\n\nconst showRoomsReducer = (state = false, action) => {\n    switch (action.type) {\n        case 'SET_SHOW_ROOMS':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport const setShowRooms = (data) => {\n\n    return {\n        type: 'SET_SHOW_ROOMS',\n        data: data\n    }\n}\n\nconst mainReducer = {\n    gameStateReducer,\n    gameVisibleReducer,\n    userReducer,\n    currentRoomReducer,\n    roomIdReducer,\n    showRoomsReducer,\n    gameOverReducer,\n}\n\n\nexport default mainReducer\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\n\nimport mainReducer from './reducers/mainReducer'\n\n\nconst reducer = combineReducers({\n  gameState: mainReducer.gameStateReducer,\n  currentRoom: mainReducer.currentRoomReducer,\n  gameVisible: mainReducer.gameVisibleReducer,\n  user: mainReducer.userReducer,\n  roomId: mainReducer.roomIdReducer,\n  showRooms: mainReducer.showRoomsReducer,\n  gameOver: mainReducer.gameOverReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","import axios from 'axios'\n\nconst baseUrl = '/api/rooms'\n\n\nconst getAll = async () => {\n    const response = await axios.get(`${baseUrl}`)\n    return response\n}\n\nconst create = async newRoom => {\n    const response = await axios.post(baseUrl, newRoom)\n    return response.data\n}\n\nconst remove = async (id) => {\n    const response = await axios.delete(`${baseUrl}/${id}`)\n    return response.data\n}\n\nconst join = async (id, roomObject) => {\n    const response = await axios.put(`${baseUrl}/${id}`, roomObject)\n    return response.data\n}\n\nconst room = { getAll, create, remove, join }\n\nexport default room","import { useEffect, useRef, useState } from \"react\";\nimport roomService from '../services/room'\nimport socketIOClient from \"socket.io-client\"\nimport { Button } from 'react-bootstrap';\n\n\n\nconst SOCKET_SERVER_URL = \"http://localhost:3001\"\n\n\nconst Join = (props) => {\n    const [availableRooms, setAvailableRooms] = useState([])\n    const socketRef = useRef()\n\n\n    useEffect(() => {\n        roomService\n            .getAll()\n            .then(response => {\n                setAvailableRooms(response.data.filter(r => r.users.length < r.playerNumber))\n            })\n            .catch(error => {\n                console.log('fail')\n            })\n\n        // socketRef.current = socketIOClient(SOCKET_SERVER_URL)\n        socketRef.current = socketIOClient()\n\n\n        socketRef.current.on('new_availableroom', (room) => {\n            setAvailableRooms(availableRooms => [...availableRooms, room].filter(r => r.users.length < r.playerNumber))\n        })\n\n        socketRef.current.on('updated_availableroom', (room) => {\n            setAvailableRooms(availableRooms => availableRooms.map(r => r.id === room.id ? room : r).filter(r => r.users.length < r.playerNumber))\n        })\n\n        socketRef.current.on('remove_availableroom', (id) => {\n            setAvailableRooms(availableRooms => availableRooms.filter(r => r.id !== id))\n        })\n\n        return () => socketRef.current.disconnect()\n\n    }, [])\n\n    return (\n        <div>\n            <ul>\n                {availableRooms.map(room => {\n                    return (\n                        <li key={room.id}>{room.roomName}, dimensions:{room.w}x{room.h}, colors:{room.colorNumber}\n                            <Button\n                                variant=\"primary\"\n                                onClick={() => props.handleJoinRoom({ ...room, users: room.users.concat(props.nickName) })}>\n                                Join</Button></li>\n\n                    )\n                }\n                )}\n            </ul>\n        </div>\n    )\n}\n\nexport default Join","import { useState, useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setGameState } from '../reducers/mainReducer'\nimport { Button, Form, Badge } from 'react-bootstrap';\n\n\n\n\nconst Settings = (props) => {\n    const dispatch = useDispatch()\n    // const playerNumber = useSelector(state => state.playerNumber)\n    const gameState = useSelector(state => state.gameState)\n\n    const [settings, setSettings] = useState({ 'w': 10, 'h': 10, 'cn': 5, 'pn': 1 })\n\n    useEffect(() => {\n        setSettings({ w: gameState.w, h: gameState.h, cn: gameState.colorNumber, pn: gameState.playerNumber })\n    }, [gameState])\n\n    const handleSettingsChange = (event, component) => {\n        if (component === 'w') setSettings({ ...settings, 'w': Number(event.target.value) })\n        if (component === 'h') setSettings({ ...settings, 'h': Number(event.target.value) })\n        if (component === 'cn') setSettings({ ...settings, 'cn': Number(event.target.value) })\n        if (component === 'pn') setSettings({ ...settings, 'pn': Number(event.target.value) })\n    }\n    const handleSubmit = () => {\n\n        const newGameState = {\n            ...gameState,\n            w: settings['w'],\n            h: settings['h'],\n            colorNumber: settings['cn'],\n            playerNumber: settings['pn']\n        }\n        dispatch(setGameState(newGameState))\n    }\n\n\n    return (\n        <div>\n            <div>\n                <Form.Group controlId=\"formBasicRange\">\n                    <Form.Label>Width</Form.Label><Badge className=\"float-sm-right\" variant=\"primary\">{settings['w']}</Badge>\n                    <Form.Control\n                        type=\"range\"\n                        min={10}\n                        max={100}\n                        value={settings['w']}\n                        onChange={(e) => handleSettingsChange(e, 'w')} />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicRange\">\n                    <Form.Label>Height</Form.Label><Badge className=\"float-sm-right\" variant=\"primary\">{settings['h']}</Badge>\n                    <Form.Control\n                        type=\"range\"\n                        min={10}\n                        max={100}\n                        value={settings['h']}\n                        onChange={(e) => handleSettingsChange(e, 'h')} />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicRange\">\n                    <Form.Label>Colors {settings['cn']}</Form.Label>\n                    <Form.Control\n                        type=\"range\"\n                        min={3}\n                        max={6}\n                        value={settings['cn']}\n                        onChange={(e) => handleSettingsChange(e, 'cn')} />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicRange\">\n                    <Form.Label>Players {settings['pn']}</Form.Label>\n                    <Form.Control\n                        type=\"range\"\n                        min={1}\n                        max={2}\n                        value={settings['pn']}\n                        onChange={(e) => handleSettingsChange(e, 'pn')} />\n                </Form.Group>\n            </div>\n            <div>\n                {gameState.w !== settings['w'] ||\n                    gameState.h !== settings['h'] ||\n                    gameState.playerNumber !== settings['pn'] ||\n                    gameState.colorNumber !== settings['cn'] ?\n                    <Button\n                        variant=\"outline-primary\"\n                        block\n                        onClick={() => handleSubmit()}>\n                        Save Settings</Button> : ''}\n            </div>\n        </div>\n    )\n}\n\nexport default Settings","import React, { useRef, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nconst Graphics = props => {\n    const gameState = useSelector(state => state.gameState)\n\n    const canvasRef = useRef(null)\n    const blockSize = 10\n\n    const getColor = colorIndex => {\n        switch (colorIndex) {\n            case 1:\n                return '#ff3300' //red\n            case 2:\n                return '#0000ff' //blue\n            case 3:\n                return '#00ff00' //green\n            case 4:\n                return '#ffff00' //yellow\n            case 5:\n                return '#cc00cc' //purple\n            case 6:\n                return 'turquoise'\n            default:\n                return 'black'\n        }\n    }\n\n    const checkNeighbour = (grid, x, y) => {\n        if (x === -1) return false\n        else if (y === -1) return false\n        else if (x === grid[0].length) return false\n        else if (y === grid.length) return false\n        else return true\n    }\n\n    const draw = ctx => {\n        ctx.clearRect(0, 0, gameState.gameGrid[0].length * blockSize, gameState.gameGrid.length * blockSize)\n\n        for (let x = 0; x < gameState.gameGrid[0].length; x++) {\n            for (let y = 0; y < gameState.gameGrid.length; y++) {\n\n                ctx.fillStyle = getColor(gameState.gameGrid[y][x][0])\n                ctx.fillRect(x * blockSize, y * blockSize, blockSize, blockSize)\n\n                if (checkNeighbour(gameState.gameGrid, x + 1, y) && gameState.gameGrid[y][x][0] !== gameState.gameGrid[y][x + 1][0]) {\n                    ctx.beginPath();\n                    ctx.strokeStyle = \"black\";\n                    ctx.moveTo(x * blockSize + blockSize, y * blockSize);\n                    ctx.lineTo(x * blockSize + blockSize, y * blockSize + blockSize);\n                    ctx.stroke();\n                    ctx.closePath()\n                }\n                if (checkNeighbour(gameState.gameGrid, x, y + 1) && gameState.gameGrid[y][x][0] !== gameState.gameGrid[y + 1][x][0]) {\n                    ctx.beginPath();\n                    ctx.strokeStyle = \"black\";\n                    ctx.moveTo(x * blockSize, y * blockSize + blockSize);\n                    ctx.lineTo(x * blockSize + blockSize, y * blockSize + blockSize);\n                    ctx.stroke();\n                    ctx.closePath()\n\n                }\n            }\n        }\n    }\n\n    useEffect(() => {\n\n        const canvas = canvasRef.current\n        const context = canvas.getContext('2d')\n\n        draw(context)\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [gameState])\n\n\n\n        const boardStyle = {\n            outline: \"black 2px solid\",\n            display: \"block\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n\n        }\n\n    return (\n        <canvas ref={canvasRef} width={gameState.gameGrid[0].length * blockSize} height={gameState.gameGrid.length * blockSize} style={boardStyle}> </canvas>\n    )\n\n}\n\nexport default Graphics","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nconst GameButtons = props => {\n    const gameState = useSelector(state => state.gameState)\n\n    const getAvailableColors = (grid, cn, pn) => {\n        if (grid.length === 0) return []\n        const pColors = []\n        for (let i = 0; i < cn; i++) pColors.push(i + 1)\n\n        if (pn === 1) return pColors.filter(c => c !== grid[0][0][0])\n        else return pColors.filter(c => c !== grid[0][0][0] && c !== grid[grid.length - 1][grid[0].length - 1][0])\n    }\n\n    const availableColors = gameState.gameGrid ? getAvailableColors(gameState.gameGrid, gameState.colorNumber, gameState.playerNumber) : []\n\n    const getColor = colorIndex => {\n        switch (colorIndex) {\n            case 1:\n                return '#ff3300' //red\n            case 2:\n                return '#0000ff' //blue\n            case 3:\n                return '#00ff00' //green\n            case 4:\n                return '#ffff00' //yellow\n            case 5:\n                return '#cc00cc' //purple\n            case 6:\n                return 'turquoise'\n            default:\n                return 'black'\n        }\n    }\n    const plateStyle = {\n        display: \"flex\",\n        justifyContent: \"center\"\n\n    }\n\n    const buttonstyle = {\n        height: '50px',\n        width: '50px',\n        textAlect: \"center\"\n    }\n\n    return (\n        <div style={plateStyle}>\n            {\n                availableColors.map(color => {\n                    return <button\n                        style={{\n                            // marginTop: '5px',\n                            // marginBottom: '6px',\n                            // marginRight: '5px',\n                            //border: getColor(color),\n                            backgroundColor: props.clickable ? getColor(color) : 'grey',\n                            ...buttonstyle\n                        }}\n                        key={color}\n                        disabled={!props.clickable}\n                        onClick={() => props.playTurnButtonHandler(color)}>\n                    </button>\n                })\n            }\n        </div>\n    )\n\n}\n\nexport default GameButtons","import { useSelector } from 'react-redux'\nimport { ProgressBar } from 'react-bootstrap';\n\n\n\nconst Progress = props => {\n    const gameState = useSelector(state => state.gameState)\n    const currentRoom = useSelector(state => state.currentRoom)\n\n    const getVariant = colorIndex => {\n        switch (colorIndex) {\n            case 0:\n                return 'success'\n            case 1:\n                return 'danger'\n            default:\n                return 'info'\n        }\n    }\n\n\n    const playerProgress = () => {\n        let ret = []\n        for (let i = 0; i < gameState.playerNumber; i++) {\n            ret.push([0, i])\n            for (let x = 0; x < gameState.gameGrid[0].length; x++) {\n                for (let y = 0; y < gameState.gameGrid.length; y++) {\n                    if (gameState.gameGrid[y][x][1] === i + 1) ret[i] = [ret[i][0] + 1, ret[i][1]]\n                }\n            }\n        }\n        const all = gameState.gameGrid[0].length * gameState.gameGrid.length\n        return ret.map(p => [p[0] / all, p[1]])\n    }\n\n    return (\n        <div>\n            {playerProgress().map(prog => {\n                return (\n                    <ProgressBar\n                        key={prog[1]}\n                        animated\n                        variant={getVariant(prog[1])}\n                        now={prog[0] * 100 * gameState.playerNumber}\n                        label={currentRoom.users[prog[1]]} />\n                )\n            })}\n        </div>\n    )\n}\n\nexport default Progress","import React from 'react'\nimport Graphics from './Graphics.js'\nimport GameButtons from './GameButtons.js'\nimport Progress from './Progress'\n\n// import saveService from '../services/saves'\n// import DropdownMenu from './DropdownMenu'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setGameState } from '../reducers/mainReducer'\nimport { Button, Badge, Row, Col } from 'react-bootstrap';\n\n\n\nconst Game = props => {\n\n    const dispatch = useDispatch()\n    const gameState = useSelector(state => state.gameState)\n    const gameVisible = useSelector(state => state.gameVisible)\n    const currentRoom = useSelector(state => state.currentRoom)\n    const gameOver = useSelector(state => state.gameOver)\n\n    // const user = useSelector(state => state.user)\n\n    // const [saves, setSaves] = useState([])\n\n    // useEffect(() => {\n    //     if (user) {\n    //         saveService\n    //             .getAll()\n    //             .then(response => {\n    //                 console.log('useeffect hankkii datan:', response.data)\n    //                 setSaves(response.data)\n    //             })\n    //             .catch(error => {\n    //                 console.log('fail')\n    //             })\n    //     }\n    //     else {\n    //         setSaves([])\n    //     }\n    // }, [user])\n\n    // const addSaveGame = async () => {\n\n    //     const saveObject = {\n    //         data: gameGrid,\n    //         playerNumber: playerNumber,\n    //         playerTurn: playerTurn,\n    //         colorNumber: colorNumber\n    //     }\n\n    //     try {\n    //         const newSave = await saveService.create(saveObject)\n    //         setSaves(saves.concat(newSave))\n    //         console.log(newSave)\n\n\n    //     } catch (exception) {\n    //         console.log(exception)\n    //     }\n    // }\n\n    // const loadSaveGameById = async (id) => {\n\n    //     try {\n    //         const loadFile = await saveService.getId(id)\n    //         dispatch(setPlayerTurn(loadFile.playerTurn))\n    //         dispatch(setPlayerNumber(loadFile.playerNumber))\n    //         dispatch(setColorNumber(loadFile.colorNumber))\n    //         dispatch(setGameGrid(loadFile.data))\n    //         //dispatch(setAvailableColors(getAvailableColors(loadFile.data, loadFile.colorNumber, loadFile.playerNumber)))\n\n\n    //     } catch (exception) {\n    //         console.log(exception)\n    //     }\n    // }\n\n    const currentTurn = currentRoom.users[gameState.playerTurn - 1]\n    const startingPoint = gameState.playerTurn && gameState.playerTurn === 1 ? [0, 0] : [gameState.gameGrid[0].length - 1, gameState.gameGrid.length - 1]\n\n    const randomizeGrid = (w, h) => {\n        let grid = []\n        let previous = [1, 0]\n\n        for (let y = 0; y < h; y++) {\n            grid.push([])\n\n            for (let x = 0; x < w; x++) {\n                let rand = [1, 0]\n                if (Math.random() < 0.09 && x !== 0) rand = previous\n                else if (Math.random() < 0.09 && y !== 0) rand = [grid[y - 1][x][0], 0]\n                else rand = [Math.floor(Math.random() * gameState.colorNumber) + 1, 0]\n\n                previous = rand\n                grid[y].push(rand)\n\n            }\n        }\n        return grid\n    }\n\n    const gameIsValid = (g) => {\n\n        if (g[0][0][0] === g[1][0][0] || g[0][0][0] === g[0][1][0]) return true\n\n        else if (gameState.playerNumber === 2 && (g[g.length - 1][g[0].length - 1][0] === g[g.length - 2][g[0].length - 1][0] || g[g.length - 1][g[0].length - 1][0] === g[g.length - 1][g[0].length - 2][0])) {\n            return true\n        }\n\n        else if (gameState.playerNumber === 2 && (g[g.length - 1][g[0].length - 1][0] === g[0][0][0])) {\n            return true\n        }\n\n        else return false\n    }\n\n    const newGame = (w, h) => {\n        let newGrid = []\n        do {\n            newGrid = randomizeGrid(w, h).slice(0)\n            newGrid[0][0] = [newGrid[0][0][0], 1]\n\n            if (gameState.playerNumber === 2) newGrid[h - 1][w - 1] = [newGrid[h - 1][w - 1][0], 2]\n\n        } while (gameIsValid(newGrid))\n\n        const newGameState = {\n            ...gameState,\n            gameGrid: newGrid.slice(0),\n            playerTurn: 1,\n        }\n\n        dispatch(setGameState(newGameState))\n        props.handleStart(newGameState)\n    }\n\n    const gameIsOver = (grid) => {\n        const tGrid = grid.map(a => a.map(b => b[1])).flat()\n        const all = gameState.gameGrid[0].length * gameState.gameGrid.length\n\n\n        if (tGrid.filter(x => x === 0).length === 0) {\n            if (gameState.playerNumber === 2) {\n                for (let i = 0; i < gameState.playerNumber; i++) {\n\n                    if (tGrid.filter(x => x === i + 1).length / all > 0.5) {\n                        return currentRoom.users[i]\n                    }\n                }\n                return 'tie'\n            }\n            return 'won'\n        }\n        return ''\n    }\n\n    var tempGrid = []\n\n    const recursionfunc = (x, y, color) => {\n\n        // Jos on vierailtu jo\n        if (tempGrid[y][x][2] === true) {\n            return\n        }\n\n        else if (gameState.playerNumber === 2 && tempGrid[y][x][1] !== 0 && tempGrid[y][x][1] !== gameState.playerTurn) {\n            tempGrid[y][x][2] = true\n            return\n        }\n\n        // Jos on oma palikka\n        else if (tempGrid[y][x][1] === gameState.playerTurn) {\n            // Ruudussa on nyt vierailtu\n            tempGrid[y][x][2] = true\n\n            if (x !== 0) recursionfunc(x - 1, y, color)\n            if (y !== 0) recursionfunc(x, y - 1, color)\n            if (x !== tempGrid[0].length - 1) recursionfunc(x + 1, y, color)\n            if (y !== tempGrid.length - 1) recursionfunc(x, y + 1, color)\n            return\n        }\n\n        // Jos ruudussa ei ole vierailtu eikä ole oma palikka, mutta on saman värinen\n        else if (tempGrid[y][x][0] === color) {\n\n            // Ruudussa on nyt vierailtu ja se on merkitty omaksi palikaksi\n            tempGrid[y][x][2] = true\n            tempGrid[y][x][1] = gameState.playerTurn\n\n            if (x !== 0) recursionfunc(x - 1, y, color)\n            if (y !== 0) recursionfunc(x, y - 1, color)\n            if (x !== tempGrid[0].length - 1) recursionfunc(x + 1, y, color)\n            if (y !== tempGrid.length - 1) recursionfunc(x, y + 1, color)\n            return\n        }\n        // Jos ruudussa ei ole vierailtu, eikä se ole oma, eikä se ole saman värinen\n        else {\n            // Ruudussa on nyt vierailtu\n            tempGrid[y][x][2] = true\n            return\n        }\n    }\n\n    const changeTurn = () => {\n        const newTurn = gameState.playerNumber === 1 ? 1 : gameState.playerTurn === 1 ? 2 : 1\n        return newTurn\n    }\n\n    const playTurn = (col) => {\n        const colorChangedGrid = gameState.gameGrid.map(a => a.map(b => b[1] === gameState.playerTurn ? [col, gameState.playerTurn] : b))\n        tempGrid = colorChangedGrid.map(a => a.map(b => [...b, false]))\n        recursionfunc(startingPoint[0], startingPoint[1], col)\n        const tempToOriginal = tempGrid.map(a => a.map(b => [b[0], b[1]]))\n\n        const newGameState = {\n            ...gameState,\n            gameGrid: tempToOriginal,\n            playerTurn: changeTurn()\n        }\n\n        dispatch(setGameState(newGameState))\n        props.handleUpdate(newGameState)\n\n        switch (gameIsOver(tempToOriginal)) {\n            case '':\n                break\n            case 'tie':\n                props.gameOver('Draw!')\n                break\n            case 'won':\n                props.gameOver('You won!')\n                break\n            default:\n                props.gameOver(gameIsOver(tempToOriginal) + 'won')\n                break\n        }\n\n\n    }\n\n\n    const playTurnButtonHandler = col => {\n        playTurn(col)\n    }\n\n    const newGameButtonHandler = () => {\n        newGame(gameState.w, gameState.h)\n    }\n\n    // const saveGameButtonHandler = () => {\n    //     console.log('saves')\n    //     addSaveGame()\n    // }\n\n    return (\n        <>\n            <Row>\n                <Col md={{ span: 4, offset: 4 }}>\n\n                    {/* <div style={{ marginTop: '5px' }}> */}\n                    {gameOver && props.isHost ? <Button\n                        variant=\"outline-danger\"\n                        block\n                        onClick={newGameButtonHandler}>\n                        Start game!</Button> : ''}\n                    {/* {\n                    gameVisible ?\n                        <div>\n                            <button onClick={newGameButtonHandler} style={{ float: 'left' }}>New Game!</button>\n                            <button onClick={endGameButtonHandler} style={{ float: 'left' }}>Settings</button>\n                            <button onClick={saveGameButtonHandler} style={{ float: 'left' }}>Save</button>\n                            <DropdownMenu loadFiles={saves} loadFunc={loadSaveGameById}></DropdownMenu>\n                        </div> :\n                        <div>\n                            <button onClick={newGameButtonHandler}>New Game!</button>\n                        </div>\n                } */}\n                </Col>\n            </Row>\n            {gameVisible ?\n                <div>\n                    <Row>\n                        <Col md={{ span: 4, offset: 4 }}>\n                            {gameState.playerNumber === 2 ?\n\n                                <Badge variant=\"danger\">{currentTurn}</Badge>\n\n                                : ''}\n                            {!gameOver ? <GameButtons playTurnButtonHandler={playTurnButtonHandler} clickable={currentTurn === props.me} /> : ''}\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Graphics />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={{ span: 4, offset: 4 }}>\n                            <Progress />\n                        </Col>\n                    </Row>\n                </div> : ''}\n\n        </>\n    )\n}\n\nexport default Game","import { useState } from \"react\";\nimport { Table, Button, InputGroup, Form } from 'react-bootstrap';\n\n\nconst Chat = (props) => {\n\n    const [message, setMessage] = useState('')\n\n    return (\n        <div>\n            <h3>Chat</h3>\n            <Table>\n                <tbody>\n\n                    {props.chatLog.map(m => {\n                        return (\n                            <tr key={m.id}>\n                                <td>\n                                    {m.sender} sanoi:\n                                </td>\n                                <td>\n                                    {m.message}\n                                </td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </Table>\n            <InputGroup className=\"mb-3\">\n                <Form.Control\n                    aria-describedby=\"basic-addon1\"\n                    placeholder={'say something'}\n                    value={message}\n                    onChange={(event) => { setMessage(event.target.value) }} />\n                <InputGroup.Append>\n                    <Button\n                        variant=\"outline-secondary\"\n                        onClick={() => {\n                            props.handleSendChat(message)\n                            setMessage('')\n                        }}>Send</Button>\n                </InputGroup.Append>\n            </InputGroup>\n        </div>\n    )\n}\n\nexport default Chat","import { useEffect, useRef, useState } from \"react\"\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport roomService from '../services/room'\nimport Join from './Join'\nimport Settings from './Settings'\nimport Game from './Game.js'\nimport Chat from './Chat.js'\n\nimport { setGameVisible, setGameState, setCurrentRoom, setRoomId, setShowRooms, setGameover } from '../reducers/mainReducer'\nimport socketIOClient from \"socket.io-client\"\n\nimport { Button, Form, Col, Row } from 'react-bootstrap';\n\nconst SOCKET_SERVER_URL = \"http://localhost:3001\"\n\n\nconst Room = (props) => {\n    const dispatch = useDispatch()\n    const currentRoom = useSelector(state => state.currentRoom)\n    const roomId = useSelector(state => state.roomId)\n    const showRooms = useSelector(state => state.showRooms)\n    const gameState = useSelector(state => state.gameState)\n\n    const [nickName, setNickName] = useState('')\n    const [chatLog, setChatLog] = useState([])\n\n    const socketRef = useRef()\n\n\n    useEffect(() => {\n\n        // socketRef.current = socketIOClient(SOCKET_SERVER_URL)\n        socketRef.current = socketIOClient()\n\n        roomId && isHost() && socketRef.current.emit('create', roomId)\n        roomId && !isHost() && socketRef.current.emit('join', { roomId: roomId, roomObject: currentRoom })\n\n        roomId && !isHost() && socketRef.current.on('leave_host', (data) => {\n            dispatch(setCurrentRoom(null))\n            dispatch(setRoomId(null))\n            dispatch(setGameover(true))\n            dispatch(setGameVisible(false))\n            dispatch(setShowRooms(false))\n            alert('host left')\n        })\n\n        roomId && isHost() && socketRef.current.on('leave_room', (data) => {\n            dispatch(setGameover(true))\n            dispatch(setGameVisible(false))\n            dispatch(setCurrentRoom(data))\n            alert('player left')\n        })\n\n        // roomId && socketRef.current.on('page_refresh', () => {\n        //     alert('opponent left')\n        //     window.location.reload(false);\n        // })\n\n        roomId && socketRef.current.on('update_game', (data) => {\n            dispatch(setGameState(data))\n        })\n\n        roomId && socketRef.current.on('game_over', (data) => {\n            dispatch(setGameover(true))\n            alert(data)\n        })\n\n        roomId && socketRef.current.on('send_message', (data) => {\n            setChatLog(chatLog => [...chatLog, data])\n        })\n\n        roomId && socketRef.current.on('start_game', (data) => {\n            dispatch(setGameState(data))\n            dispatch(setGameVisible(true))\n            dispatch(setGameover(false))\n        })\n\n\n        roomId && socketRef.current.on('update_room', (data) => {\n            dispatch(setCurrentRoom(data))\n        })\n\n        roomId && window.addEventListener('beforeunload', () => pageRefresh())\n\n\n        return () => {\n            roomId && window.removeEventListener('beforeunload', () => pageRefresh(roomId))\n            socketRef.current.disconnect()\n\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [roomId])\n\n    const pageRefresh = (id) => {\n\n        isHost() && handleLeaveHost()\n        !isHost() && handleLeave()\n\n    }\n\n    const handleCreate = async () => {\n        const createdRoom = await roomService.create({\n            nickName: nickName,\n            w: gameState.w,\n            h: gameState.h,\n            colorNumber: gameState.colorNumber,\n            playerNumber: gameState.playerNumber\n        })\n        dispatch(setCurrentRoom(createdRoom))\n        dispatch(setRoomId(createdRoom.id))\n        socketRef.current.emit('new_availableroom', createdRoom)\n    }\n\n    const handleLeaveHost = async () => {\n        const deletedRoom = await roomService.remove(currentRoom.id)\n        dispatch(setCurrentRoom(null))\n        dispatch(setRoomId(null))\n        dispatch(setGameover(true))\n        dispatch(setGameVisible(false))\n        socketRef.current.emit('leave_host', { roomId: deletedRoom.id })\n    }\n\n\n    const handleLeave = async () => {\n        const roomObject = {\n            ...currentRoom,\n            users: currentRoom.users.filter(u => u !== nickName)\n        }\n        const updatedRoom = await roomService.join(currentRoom.id, roomObject)\n        socketRef.current.emit('leave_room', { roomId: updatedRoom.id, roomObject: updatedRoom })\n        socketRef.current.emit('new_availableroom', updatedRoom)\n        dispatch(setCurrentRoom(null))\n        dispatch(setRoomId(null))\n        dispatch(setGameover(true))\n        dispatch(setGameVisible(false))\n    }\n\n    const handleJoinRoom = async (roomObject) => {\n        const joinedRoom = await roomService.join(roomObject.id, roomObject)\n        dispatch(setCurrentRoom(joinedRoom))\n        dispatch(setRoomId(joinedRoom.id))\n    }\n\n    const handleSendChat = (message) => {\n        const chatObject = {\n            sender: nickName,\n            message: message,\n            id: chatLog.length + 1\n        }\n        //dispatch(setChatLog([...chatLog, chatObject]))\n        socketRef.current.emit('send_message', { roomId: roomId, chatObject: chatObject })\n\n    }\n\n    const isHost = () => {\n        if (currentRoom && currentRoom.host === nickName) return true\n        return false\n    }\n\n    const handleUpdate = (gameState) => {\n        socketRef.current.emit('update_game', { roomId: roomId, gameState: gameState })\n    }\n\n    const handleGameOver = (text) => {\n        socketRef.current.emit('game_over', { roomId: roomId, text: text })\n    }\n\n    const handleShowRooms = () => {\n        dispatch(setShowRooms(!showRooms))\n    }\n\n    const handleStartGame = (gameState) => {\n        socketRef.current.emit('start_game', { roomId: roomId, gameState: gameState })\n    }\n\n    return (\n        <div>\n            { !currentRoom ?\n                <Row>\n\n                    <Col md={{ span: 4, offset: 4 }}>\n\n                        <div>\n                            {!showRooms ?\n                                <div>\n                                    <div>\n                                        <Form.Control value={nickName}\n                                            placeholder={'set username'}\n                                            onChange={(event) => setNickName(event.target.value)}>\n                                        </Form.Control>\n                                    </div>\n                                    <div>\n                                        {nickName !== '' ? <Button\n                                            variant=\"outline-primary\"\n                                            block\n                                            onClick={handleCreate}>\n                                            Create room</Button> : ''}\n                                    </div>\n                                    <div>\n                                        {nickName !== '' ? <Button\n                                            variant=\"outline-primary\"\n                                            block\n                                            onClick={handleShowRooms}>\n                                            Show rooms</Button> : ''}\n                                        <Settings />\n                                    </div>\n                                </div> :\n                                <div>\n                                    <Join handleJoinRoom={handleJoinRoom} nickName={nickName} />\n                                    <Button\n                                        variant=\"primary\"\n                                        onClick={handleShowRooms}>\n                                        Hide rooms</Button>\n                                </div>\n                            }\n                        </div>\n                    </Col>\n                </Row> :\n\n\n                <div>\n                    <Row>\n\n                        <Col md={{ span: 4, offset: 4 }}>\n                            <p className=\"text-center\">Host: {currentRoom.users[0]}</p>\n                            <p className=\"text-center\">Room: {currentRoom.roomName}</p>\n                            <Chat handleSendChat={handleSendChat} chatLog={chatLog} />\n                            {isHost() ?\n                                <div>\n                                    <Button\n                                        size=\"sm\"\n                                        variant=\"outline-primary\"\n                                        block\n                                        onClick={() => handleLeaveHost()}>\n                                        Leave room</Button>\n\n                                </div> :\n                                <div>\n                                    <Button\n                                        size=\"sm\"\n                                        variant=\"outline-primary\"\n                                        block\n                                        onClick={() => handleLeave()}>\n                                        Leave</Button>\n                                </div>\n\n                            }\n                        </Col>\n                    </Row>\n\n\n                    <div>\n                        {\n                            currentRoom.users.length === currentRoom.playerNumber ?\n                                <div>\n                                    <Game me={nickName} handleUpdate={handleUpdate} handleStart={handleStartGame} isHost={isHost()} gameOver={handleGameOver}>\n                                    </Game>\n                                </div> : ''\n                        }\n                    </div>\n\n\n\n                </div>\n            }\n\n        </div >\n    )\n}\n\nexport default Room","import React, { useEffect } from 'react'\n// import saveService from './services/saves'\nimport Room from './components/Room.js'\n// import Authentication from './components/Authentication.js'\nimport { useDispatch } from 'react-redux'\n\n\nimport { setUser } from './reducers/mainReducer'\nimport { Container, Row, Col, Badge } from 'react-bootstrap';\n\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedFloodItUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(setUser(user))\n      //saveService.setToken(user.token)\n    }\n  }, [dispatch])\n\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col md={{ span: 4, offset: 4 }}>\n          <h1 className=\"text-center\"><Badge variant=\"primary\" >FLOOD IT</Badge></h1>\n\n          {/* <Authentication /> */}\n        </Col>\n      </Row>\n \n      <Room />\n    </Container>\n  )\n\n}\n\nexport default App;\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux' \nimport store from './store'\nimport App from './App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}