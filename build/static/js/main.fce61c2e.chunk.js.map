{"version":3,"sources":["reducers/mainReducer.js","store.js","services/login.js","services/users.js","services/room.js","components/Join.js","components/GameBoard.js","components/Game.js","components/Settings.js","components/Room.js","App.js","index.js"],"names":["initialState","gameGrid","playerNumber","playerTurn","colorNumber","w","h","setGameState","data","type","setGameVisible","setUser","gameStateReducer","state","action","gridReducer","playerTurnReducer","gameVisibleReducer","userReducer","playerNumberReducer","colorNumberReducer","dimReducer","reducer","combineReducers","gameState","mainReducer","gameVisible","user","dim","store","createStore","composeWithDevTools","applyMiddleware","thunk","login","credentials","a","axios","post","response","signUp","baseUrl","getAll","get","create","newRoom","remove","id","delete","join","roomObject","put","Join","props","useState","roomsAvailable","setRoomsAvailable","socketRef","useRef","useEffect","roomService","then","catch","error","console","log","current","socketIOClient","on","room","map","r","disconnect","roomName","host","users","onClick","handleJoinRoom","concat","userName","GameBoard","canvasRef","draw","context","getContext","ref","width","height","style","outline","marginLeft","Game","dispatch","useDispatch","useSelector","myTurn","players","me","availableColors","grid","cn","pn","length","pColors","i","push","filter","c","getAvailableColors","startingPoint","checkNeighbour","x","y","getColor","colorIndex","randomizeGrid","previous","rand","Math","random","floor","tempGrid","recursionfunc","color","playTurn","col","colorChangedGrid","b","tempToOriginal","newGameState","handleUpdate","flat","alert","newGameButtonHandler","g","newGrid","slice","newGame","buttonstyle","marginTop","float","clear","marginBottom","marginRight","backgroundColor","ctx","clearRect","fillStyle","fillRect","beginPath","strokeStyle","moveTo","lineTo","stroke","closePath","Settings","settings","setSettings","handleSettingsChange","event","component","Number","target","value","textStyle","display","min","max","onChange","e","handleSubmit","Room","setUserName","chat","setChat","currentRoom","setCurrentRoom","roomId","setRoomId","showRooms","setShowRooms","isHost","emit","handleLeaveHost","handleCreate","createdRoom","handleLeave","u","chatLog","updatedRoom","handleSendChat","joinedRoom","m","placeholder","App","showSignUpForm","setShowSignupForm","showLoginForm","setShowLoginForm","username","setUsername","password","setPassword","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","preventDefault","loginService","setItem","stringify","handleSignUp","usersService","onSubmit","name","ReactDOM","render","document","getElementById"],"mappings":"mMACMA,EAAe,CACjBC,SAAU,GACVC,aAAc,EACdC,WAAW,EACXC,YAAa,EACbC,EAAG,GACHC,EAAG,IAYMC,EAAe,SAACC,GACzB,MAAO,CACHC,KAAM,gBACND,KAAMA,IA8CDE,EAAiB,SAACF,GAE3B,MAAO,CACHC,KAAM,mBACND,KAAMA,IAaDG,EAAU,SAACH,GAEpB,MAAO,CACHC,KAAM,WACND,KAAMA,IAwDC,GACXI,iBAxIqB,WAAmC,IAAlCC,EAAiC,uDAAzBb,EAAcc,EAAW,uCACvD,OAAQA,EAAOL,MACX,IAAK,gBACD,OAAOK,EAAON,KAClB,QACI,OAAOK,IAoIfE,YAzHgB,WAAyB,IAAxBF,EAAuB,uDAAf,GAAIC,EAAW,uCACxC,OAAQA,EAAOL,MACX,IAAK,WACD,OAAOK,EAAON,KAClB,QACI,OAAOK,IAsHfG,kBA3GsB,WAAwB,IAAvBH,EAAsB,uDAAd,EAAGC,EAAW,uCAC7C,OAAQA,EAAOL,MACX,IAAK,iBACD,OAAOK,EAAON,KAClB,QACI,OAAOK,IAuGfI,mBA3FuB,WAA4B,IAA3BJ,EAA0B,wDAAXC,EAAW,uCAClD,OAAQA,EAAOL,MACX,IAAK,mBACD,OAAOK,EAAON,KAClB,QACI,OAAOK,IAuFfK,YA3EgB,WAA2B,IAA1BL,EAAyB,uDAAjB,KAAMC,EAAW,uCAC1C,OAAQA,EAAOL,MACX,IAAK,WACD,OAAOK,EAAON,KAClB,QACI,OAAOK,IAuEfM,oBA3DwB,WAAwB,IAAvBN,EAAsB,uDAAd,EAAGC,EAAW,uCAC/C,OAAQA,EAAOL,MACX,IAAK,oBACD,OAAOK,EAAON,KAClB,QACI,OAAOK,IAuDfO,mBA3CuB,WAAwB,IAAvBP,EAAsB,uDAAd,EAAGC,EAAW,uCAC9C,OAAQA,EAAOL,MACX,IAAK,mBACD,OAAOK,EAAON,KAClB,QACI,OAAOK,IAuCfQ,WA3Be,WAAyC,IAAxCR,EAAuC,uDAA/B,CAAC,EAAK,GAAI,EAAK,IAAKC,EAAW,uCACvD,OAAQA,EAAOL,MACX,IAAK,UACD,OAAOK,EAAON,KAClB,QACI,OAAOK,KC5HbS,EAAUC,0BAAgB,CAC9BC,UAAWC,EAAYb,iBACvBX,SAAUwB,EAAYV,YAEtBZ,WAAYsB,EAAYT,kBACxBU,YAAaD,EAAYR,mBACzBU,KAAMF,EAAYP,YAClBhB,aAAcuB,EAAYN,oBAC1Bf,YAAaqB,EAAYL,mBACzBQ,IAAKH,EAAYJ,aAUJQ,EAPDC,sBACZR,EACAS,8BACEC,0BAAgBC,O,8CCfL,GAAEC,MALN,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEACWC,IAAMC,KAHf,aAG6BH,GAD/B,cACNI,EADM,yBAELA,EAAS/B,MAFJ,2CAAH,uDCKI,GAAEgC,OALL,uCAAG,WAAML,GAAN,eAAAC,EAAA,sEACUC,IAAMC,KAHf,aAG6BH,GAD9B,cACPI,EADO,yBAENA,EAAS/B,MAFH,2CAAH,uD,QCDNiC,EAAU,aAyBD,GAAEC,OAtBL,uCAAG,4BAAAN,EAAA,sEACYC,IAAMM,IAAN,UAAaF,IADzB,cACLF,EADK,yBAEJA,GAFI,2CAAH,qDAsBaK,OAjBb,uCAAG,WAAMC,GAAN,eAAAT,EAAA,sEACYC,IAAMC,KAAKG,EAASI,GADhC,cACLN,EADK,yBAEJA,EAAS/B,MAFL,2CAAH,sDAiBqBsC,OAZrB,uCAAG,WAAOC,GAAP,eAAAX,EAAA,sEACYC,IAAMW,OAAN,UAAgBP,EAAhB,YAA2BM,IADvC,cACLR,EADK,yBAEJA,EAAS/B,MAFL,2CAAH,sDAY6ByC,KAP/B,uCAAG,WAAOF,EAAIG,GAAX,eAAAd,EAAA,sEACcC,IAAMc,IAAN,UAAaV,EAAb,YAAwBM,GAAMG,GAD5C,cACHX,EADG,yBAEFA,EAAS/B,MAFP,2CAAH,yD,wBCmCK4C,EAjDF,SAACC,GAAW,IAAD,EAEwBC,mBAAS,IAFjC,mBAEbC,EAFa,KAEGC,EAFH,KAGdC,EAAYC,mBA8BlB,OA3BAC,qBAAU,WAuBN,OAtBAC,EACKlB,SACAmB,MAAK,SAAAtB,GACFiB,EAAkBjB,EAAS/B,SAE9BsD,OAAM,SAAAC,GACHC,QAAQC,IAAI,WAIpBR,EAAUS,QAAUC,MAGpBV,EAAUS,QAAQE,GAAG,+BAA+B,SAACC,GACjDL,QAAQC,IAAI,8CAA4CI,GACxDb,GAAkB,SAAAD,GAAc,4BAAQA,GAAR,CAAwBc,UAG5DZ,EAAUS,QAAQE,GAAG,oBAAoB,SAACC,GACtCb,GAAkB,SAAAD,GAAc,OAAIA,EAAee,KAAI,SAAAC,GAAC,OAAIA,EAAExB,KAAOsB,EAAKtB,GAAKsB,EAAOE,WAGnF,kBAAMd,EAAUS,QAAQM,gBAEhC,IAGC,8BACI,6BACKjB,EAAee,KAAI,SAAAD,GAChB,OACI,+BAAmBA,EAAKI,SAAxB,QAAuCJ,EAAKK,KAA5C,QAAuDL,EAAKM,MACxD,wBAAQC,QAAS,kBAAMvB,EAAMwB,eAAN,2BAA0BR,GAA1B,IAAgCM,MAAON,EAAKM,MAAMG,OAAOzB,EAAM0B,cAAtF,oBADKV,EAAKtB,YCdvBiC,EA5BG,SAAA3B,GAEd,IAAM4B,EAAYvB,iBAAO,MAEnBwB,EAAO7B,EAAM6B,KAEnBvB,qBAAU,WAEN,IACMwB,EADSF,EAAUf,QACFkB,WAAW,MAGlCF,EAAKC,KACN,CAACD,IASJ,OACI,wBAAQG,IAAKJ,EAAWK,MAAOjC,EAAMiC,MAAOC,OAAQlC,EAAMkC,OAAQC,MANnD,CACfC,QAAS,kBACTC,WAAY,OAIZ,gBC6VOC,G,OA5WF,SAAAtC,GAET,IAAMuC,EAAWC,cACXrE,EAAYsE,aAAY,SAAAjF,GAAK,OAAIA,EAAMW,aACvCE,EAAcoE,aAAY,SAAAjF,GAAK,OAAIA,EAAMa,eAJ7B,GAKLoE,aAAY,SAAAjF,GAAK,OAAIA,EAAMc,QAUd2B,mBAAS,KAfjB,mBA2CZyC,GA3CY,UA2CH1C,EAAM2C,QAAQxE,EAAUrB,WAAa,KAAOkD,EAAM4C,IAC3DC,EAAkB1E,EAAUvB,SAVP,SAACkG,EAAMC,EAAIC,GAClC,GAAoB,IAAhBF,EAAKG,OAAc,MAAO,GAE9B,IADA,IAAMC,EAAU,GACPC,EAAI,EAAGA,EAAIJ,EAAII,IAAKD,EAAQE,KAAKD,EAAI,GAE9C,OAAW,IAAPH,EAAiBE,EAAQG,QAAO,SAAAC,GAAC,OAAIA,IAAMR,EAAK,GAAG,GAAG,MAC9CI,EAAQG,QAAO,SAAAC,GAAC,OAAIA,IAAMR,EAAK,GAAG,GAAG,IAAMQ,IAAMR,EAAKA,EAAKG,OAAS,GAAGH,EAAK,GAAGG,OAAS,GAAG,MAI9DM,CAAmBpF,EAAUvB,SAAUuB,EAAUpB,YAAaoB,EAAUtB,cAAgB,GAuC/H2G,EAAgBrF,EAAUrB,YAAuC,IAAzBqB,EAAUrB,WAAmB,CAAC,EAAG,GAAK,CAACqB,EAAUvB,SAAS,GAAGqG,OAAS,EAAG9E,EAAUvB,SAASqG,OAAS,GAG7IQ,EAAiB,SAACX,EAAMY,EAAGC,GAC7B,OAAW,IAAPD,KACY,IAAPC,IACAD,IAAMZ,EAAK,GAAGG,QACdU,IAAMb,EAAKG,UAoClBW,EAAW,SAAAC,GACb,OAAQA,GACJ,KAAK,EACD,MAAO,UACX,KAAK,EACD,MAAO,UACX,KAAK,EACD,MAAO,UACX,KAAK,EACD,MAAO,UACX,KAAK,EACD,MAAO,UACX,KAAK,EACD,MAAO,YACX,QACI,MAAO,UAKbC,EAAgB,SAAC9G,EAAGC,GAItB,IAHA,IAAI6F,EAAO,GACPiB,EAAW,CAAC,EAAG,GAEVJ,EAAI,EAAGA,EAAI1G,EAAG0G,IAAK,CACxBb,EAAKM,KAAK,IAEV,IAAK,IAAIM,EAAI,EAAGA,EAAI1G,EAAG0G,IAAK,CACxB,IAAIM,EAAO,CAAC,EAAG,GAKfD,EAJqCC,EAAjCC,KAAKC,SAAW,KAAc,IAANR,EAAgBK,EACnCE,KAAKC,SAAW,KAAc,IAANP,EAAgB,CAACb,EAAKa,EAAI,GAAGD,GAAG,GAAI,GACzD,CAACO,KAAKE,MAAMF,KAAKC,SAAW/F,EAAUpB,aAAe,EAAG,GAGpE+F,EAAKa,GAAGP,KAAKY,IAIrB,OAAOlB,GAsDPsB,EAAW,GAETC,EAAgB,SAAhBA,EAAiBX,EAAGC,EAAGW,GAGzB,OAA0B,IAAtBF,EAAST,GAAGD,GAAG,QACf,EAGgC,IAA3BvF,EAAUtB,cAA4C,IAAtBuH,EAAST,GAAGD,GAAG,IAAYU,EAAST,GAAGD,GAAG,KAAOvF,EAAUrB,gBAChGsH,EAAST,GAAGD,GAAG,IAAK,GAKfU,EAAST,GAAGD,GAAG,KAAOvF,EAAUrB,YAErCsH,EAAST,GAAGD,GAAG,IAAK,EAEV,IAANA,GAASW,EAAcX,EAAI,EAAGC,EAAGW,GAC3B,IAANX,GAASU,EAAcX,EAAGC,EAAI,EAAGW,GACjCZ,IAAMU,EAAS,GAAGnB,OAAS,GAAGoB,EAAcX,EAAI,EAAGC,EAAGW,QACtDX,IAAMS,EAASnB,OAAS,GAAGoB,EAAcX,EAAGC,EAAI,EAAGW,KAKlDF,EAAST,GAAGD,GAAG,KAAOY,GAG3BF,EAAST,GAAGD,GAAG,IAAK,EACpBU,EAAST,GAAGD,GAAG,GAAKvF,EAAUrB,WAEpB,IAAN4G,GAASW,EAAcX,EAAI,EAAGC,EAAGW,GAC3B,IAANX,GAASU,EAAcX,EAAGC,EAAI,EAAGW,GACjCZ,IAAMU,EAAS,GAAGnB,OAAS,GAAGoB,EAAcX,EAAI,EAAGC,EAAGW,QACtDX,IAAMS,EAASnB,OAAS,GAAGoB,EAAcX,EAAGC,EAAI,EAAGW,UAMvDF,EAAST,GAAGD,GAAG,IAAK,IAKtBa,EAAW,SAACC,GACd,IAAMC,EAAmBtG,EAAUvB,SAASqE,KAAI,SAAAlC,GAAC,OAAIA,EAAEkC,KAAI,SAAAyD,GAAC,OAAIA,EAAE,KAAOvG,EAAUrB,WAAa,CAAC0H,EAAKrG,EAAUrB,YAAc4H,QAC9HN,EAAWK,EAAiBxD,KAAI,SAAAlC,GAAC,OAAIA,EAAEkC,KAAI,SAAAyD,GAAC,4BAAQA,GAAR,EAAW,UACvDL,EAAcb,EAAc,GAAIA,EAAc,GAAIgB,GAClD,IAAMG,EAAiBP,EAASnD,KAAI,SAAAlC,GAAC,OAAIA,EAAEkC,KAAI,SAAAyD,GAAC,MAAI,CAACA,EAAE,GAAIA,EAAE,UAEvDE,EAAY,2BACXzG,GADW,IAEdvB,SAAU+H,EACV7H,WApEuC,IAA3BqB,EAAUtB,aAAqB,EAA6B,IAAzBsB,EAAUrB,WAAmB,EAAI,IAsEpFyF,EAASrF,EAAa0H,IACtB5E,EAAM6E,aAAaD,GA/DuB,IAmE3BD,EArEI1D,KAAI,SAAAlC,GAAC,OAAIA,EAAEkC,KAAI,SAAAyD,GAAC,OAAIA,EAAE,SAAKI,OAEpCzB,QAAO,SAAAK,GAAC,OAAU,IAANA,KAAST,QAmEC8B,MAAM,WAYpCC,EAAuB,YA/Gb,SAAChI,EAAGC,GAChB,IAhBiBgI,EAgBbC,EAAU,GACd,IACIA,EAAUpB,EAAc9G,EAAGC,GAAGkI,MAAM,IAC5B,GAAG,GAAK,CAACD,EAAQ,GAAG,GAAG,GAAI,GAEJ,IAA3B/G,EAAUtB,eAAoBqI,EAAQjI,EAAI,GAAGD,EAAI,GAAK,CAACkI,EAAQjI,EAAI,GAAGD,EAAI,GAAG,GAAI,WArBxEiI,EAyBIC,GAvBf,GAAG,GAAG,KAAOD,EAAE,GAAG,GAAG,IAAMA,EAAE,GAAG,GAAG,KAAOA,EAAE,GAAG,GAAG,IAEpB,IAA3B9G,EAAUtB,eAAuBoI,EAAEA,EAAEhC,OAAS,GAAGgC,EAAE,GAAGhC,OAAS,GAAG,KAAOgC,EAAEA,EAAEhC,OAAS,GAAGgC,EAAE,GAAGhC,OAAS,GAAG,IAAMgC,EAAEA,EAAEhC,OAAS,GAAGgC,EAAE,GAAGhC,OAAS,GAAG,KAAOgC,EAAEA,EAAEhC,OAAS,GAAGgC,EAAE,GAAGhC,OAAS,GAAG,KAI9J,IAA3B9E,EAAUtB,cAAuBoI,EAAEA,EAAEhC,OAAS,GAAGgC,EAAE,GAAGhC,OAAS,GAAG,KAAOgC,EAAE,GAAG,GAAG,IAmB1F,IAAML,EAAY,2BACXzG,GADW,IAEdvB,SAAUsI,EAAQC,MAAM,GACxBrI,WAAY,IAGhByF,EAASrF,EAAa0H,IACtB5E,EAAM6E,aAAaD,GA6FnBQ,CAAQjH,EAAUnB,EAAGmB,EAAUlB,GAC/BsF,EAASlF,GAAe,KAetBgI,EAAc,CAChBnD,OAAQ,OACRD,MAAO,QAGX,OAEI,gCACI,qBAAKE,MAAO,CAAEmD,UAAW,OAAzB,SAEQjH,EACI,gCACI,wBAAQkD,QAASyD,EAAsB7C,MAAO,CAAEoD,MAAO,QAAvD,uBACA,wBAAQhE,QAxBH,WACzBgB,EAASlF,GAAe,KAuBmC8E,MAAO,CAAEoD,MAAO,QAAvD,yBAIJ,8BACI,wBAAQhE,QAASyD,EAAjB,2BAIhB,qBAAK7C,MAAO,CAAEqD,MAAO,UACpBnH,EACG,gCACI,8BACKqE,EACGG,EAAgB5B,KAAI,SAAAqD,GAChB,OAAO,wBACHnC,MAAK,aACDmD,UAAW,MACXG,aAAc,MACdC,YAAa,MAEbC,gBAAiB/B,EAASU,IACvBe,GAGP9D,QAAS,WA1DrCgD,EA0DiED,KADhCA,MAIX,KAEV,cAAC,EAAD,CACIrC,MAAsC,GAA/B9D,EAAUvB,SAAS,GAAGqG,OAC7Bf,OAAoC,GAA5B/D,EAAUvB,SAASqG,OAC3BpB,KAtQP,SAAA+D,GACTA,EAAIC,UAAU,EAAG,EAAkC,GAA/B1H,EAAUvB,SAAS,GAAGqG,OAAyC,GAA5B9E,EAAUvB,SAASqG,QAE1E,IAAK,IAAIS,EAAI,EAAGA,EAAIvF,EAAUvB,SAAS,GAAGqG,OAAQS,IAC9C,IAAK,IAAIC,EAAI,EAAGA,EAAIxF,EAAUvB,SAASqG,OAAQU,IAE3CiC,EAAIE,UAAYlC,EAASzF,EAAUvB,SAAS+G,GAAGD,GAAG,IAGlDkC,EAAIG,SAAa,GAAJrC,EAAY,GAAJC,EAAQ,GAAI,IAE7BF,EAAetF,EAAUvB,SAAU8G,EAAI,EAAGC,IAAMxF,EAAUvB,SAAS+G,GAAGD,GAAG,KAAOvF,EAAUvB,SAAS+G,GAAGD,EAAI,GAAG,KAC7GkC,EAAII,YACJJ,EAAIK,YAAc,QAClBL,EAAIM,OAAW,GAAJxC,EAAS,GAAQ,GAAJC,GACxBiC,EAAIO,OAAW,GAAJzC,EAAS,GAAQ,GAAJC,EAAS,IACjCiC,EAAIQ,SACJR,EAAIS,aAEJ5C,EAAetF,EAAUvB,SAAU8G,EAAGC,EAAI,IAAMxF,EAAUvB,SAAS+G,GAAGD,GAAG,KAAOvF,EAAUvB,SAAS+G,EAAI,GAAGD,GAAG,KAC7GkC,EAAII,YACJJ,EAAIK,YAAc,QAClBL,EAAIM,OAAW,GAAJxC,EAAY,GAAJC,EAAS,IAC5BiC,EAAIO,OAAW,GAAJzC,EAAS,GAAQ,GAAJC,EAAS,IACjCiC,EAAIQ,SACJR,EAAIS,mBA+OC,QCrQVC,EAnGE,SAACtG,GACd,IAAMuC,EAAWC,cACXnE,EAAcoE,aAAY,SAAAjF,GAAK,OAAIA,EAAMa,eAEzCF,EAAYsE,aAAY,SAAAjF,GAAK,OAAIA,EAAMW,aAJrB,EAMQ8B,mBAAS,CAAE,EAAK,GAAI,EAAK,GAAI,GAAM,EAAG,GAAM,IANpD,mBAMjBsG,EANiB,KAMPC,EANO,KAQlBC,EAAuB,SAACC,EAAOC,GACf,MAAdA,GAAmBH,EAAY,2BAAKD,GAAN,IAAgB,EAAKK,OAAOF,EAAMG,OAAOC,UACzD,MAAdH,GAAmBH,EAAY,2BAAKD,GAAN,IAAgB,EAAKK,OAAOF,EAAMG,OAAOC,UACzD,OAAdH,GAAoBH,EAAY,2BAAKD,GAAN,IAAgB,GAAMK,OAAOF,EAAMG,OAAOC,UAC3D,OAAdH,GAAoBH,EAAY,2BAAKD,GAAN,IAAgB,GAAMK,OAAOF,EAAMG,OAAOC,WAgB3EC,EAAY,CACdC,QAAS,eACT/E,MAAO,QASX,OACI,8BAES5D,EAkDY,GAjDT,gCAEI,gCACI,qBAAK8D,MAAO4E,EAAZ,mBACA,uBACI5E,MAhBR,CAChB6E,QAAS,gBAgBe5J,KAAM,QACN6J,IAAK,GACLC,IAAK,IACLJ,MAAOP,EAAQ,EACfY,SAAU,SAACC,GAAD,OAAOX,EAAqBW,EAAG,QAE7C,qBAAKjF,MApBR,CACjB6E,QAAS,gBAmBW,SAA2BT,EAAQ,OAGvC,gCACI,qBAAKpE,MAAO4E,EAAZ,oBACA,uBACI3J,KAAM,QACN6J,IAAK,GACLC,IAAK,IACLJ,MAAOP,EAAQ,EACfY,SAAU,SAACC,GAAD,OAAOX,EAAqBW,EAAG,QAE5Cb,EAAQ,KAEb,gCACI,qBAAKpE,MAAO4E,EAAZ,oBACA,uBACI3J,KAAM,QACN6J,IAAK,EACLC,IAAK,EACLJ,MAAOP,EAAQ,GACfY,SAAU,SAACC,GAAD,OAAOX,EAAqBW,EAAG,SAE5Cb,EAAQ,MAEb,gCACI,qBAAKpE,MAAO4E,EAAZ,qBACA,uBACI3J,KAAM,QACN6J,IAAK,EACLC,IAAK,EACLJ,MAAOP,EAAQ,GACfY,SAAU,SAACC,GAAD,OAAOX,EAAqBW,EAAG,SAE5Cb,EAAQ,MAEb,8BAAK,wBAAQhF,QAAS,kBA7ErB,WAIjB,IAAMqD,EAAY,2BACXzG,GADW,IAEdnB,EAAGuJ,EAAQ,EACXtJ,EAAGsJ,EAAQ,EACXxJ,YAAawJ,EAAQ,GACrB1J,aAAc0J,EAAQ,KAE1BhE,EAASrF,EAAa0H,IAkEsByC,IAAvB,mCCiEdC,EArJF,SAACtH,GACV,IAAMuC,EAAWC,cADG,EAIYvC,mBAAS,IAJrB,mBAIbyB,EAJa,KAIH6F,EAJG,OAKItH,mBAAS,IALb,mBAKbuH,EALa,KAKPC,EALO,OAOkBxH,mBAAS,MAP3B,mBAObyH,EAPa,KAOAC,EAPA,OAQQ1H,mBAAS,MARjB,mBAQb2H,EARa,KAQLC,EARK,OASc5H,oBAAS,GATvB,mBASb6H,EATa,KASFC,EATE,KAUd3H,EAAYC,mBAElBC,qBAAU,WAiBN,OAfAF,EAAUS,QAAUC,MAEpB8G,GAAUI,KAAY5H,EAAUS,QAAQoH,KAAK,SAAUL,GACvDA,IAAWI,KAAY5H,EAAUS,QAAQoH,KAAK,OAAQ,CAAEL,OAAQA,EAAQ/H,WAAY6H,IAEpFE,GAAUxH,EAAUS,QAAQE,GAAG,eAAe,SAAC5D,GAC3CoF,EAASrF,EAAaC,IACtBoF,EAASlF,GAAe,OAI5BuK,GAAUxH,EAAUS,QAAQE,GAAG,eAAe,SAAC5D,GAC3CwK,EAAexK,MAGZ,WACHyK,GAAUI,KAAYE,IACtB9H,EAAUS,QAAQM,gBAEvB,CAACyG,IAEJ,IAAMO,EAAY,uCAAG,4BAAApJ,EAAA,sEACSwB,EAAYhB,OAAO,CACzCmC,SAAUA,IAFG,OACX0G,EADW,OAIjBT,EAAeS,GACfP,EAAUO,EAAY1I,IACtBU,EAAUS,QAAQoH,KAAK,4BAA6BG,GANnC,2CAAH,qDAUZF,EAAe,uCAAG,sBAAAnJ,EAAA,sEACMwB,EAAYd,OAAOiI,EAAYhI,IADrC,cAEpBiI,EAAe,MACfE,EAAU,MAHU,2CAAH,qDAOfQ,EAAW,uCAAG,8BAAAtJ,EAAA,6DACVc,EAAa,CACfuB,SAAUsG,EAAYtG,SACtBC,KAAMqG,EAAYrG,KAClBC,MAAOoG,EAAYpG,MAAM+B,QAAO,SAAAiF,GAAC,OAAIA,IAAM5G,KAC3C6G,QAASb,EAAYa,SALT,SAOUhI,EAAYX,KAAK8H,EAAYhI,GAAIG,GAP3C,OAOV2I,EAPU,OAQhBpI,EAAUS,QAAQoH,KAAK,cAAe,CAAEL,OAAQY,EAAY9I,GAAIG,WAAY2I,IAC5Eb,EAAe,MACfE,EAAU,MAVM,2CAAH,qDAaXY,EAAc,uCAAG,8BAAA1J,EAAA,6DACbc,EAAa,CACfuB,SAAUsG,EAAYtG,SACtBC,KAAMqG,EAAYrG,KAClBC,MAAOoG,EAAYpG,MACnBiH,QAAQ,GAAD,mBAAMb,EAAYa,SAAlB,CAA2B,CAAC7G,EAAU8F,MAL9B,SAOOjH,EAAYX,KAAK8H,EAAYhI,GAAIG,GAPxC,OAOb2I,EAPa,OAQnBpI,EAAUS,QAAQoH,KAAK,cAAe,CAAEL,OAAQY,EAAY9I,GAAIG,WAAY2I,IARzD,2CAAH,qDAWdR,EAAS,WACX,SAAIN,GAAeA,EAAYrG,OAASK,IAItCF,EAAc,uCAAG,WAAO3B,GAAP,eAAAd,EAAA,sEACMwB,EAAYX,KAAKC,EAAWH,GAAIG,GADtC,OACb6I,EADa,OAEnBf,EAAee,GACfb,EAAUa,EAAWhJ,IAHF,2CAAH,sDAUpB,OACI,8BACOgI,EAcC,gCACKM,IACG,mDACqBN,EAAYtG,SAC7B,wBAAQG,QAAS2G,EAAjB,wBACA,8BACI,cAAC,EAAD,SAGR,8CACgBR,EAAYtG,SACxB,wBAAQG,QAAS,kBAAM8G,KAAvB,sBAER,gCACI,+BACI,wCACCX,EAAYa,QAAQtH,KAAI,SAAA0H,GACrB,OACI,+BAAuBA,EAAE,GAAzB,WAAqCA,EAAE,KAA9BA,EAAE,GAAKA,EAAE,UAI9B,uBAAOC,YAAa,gBAAiB9B,MAAOU,EAAML,SAAU,SAACT,GAAD,OAAWe,EAAQf,EAAMG,OAAOC,UAC5F,wBAAQvF,QAASkH,EAAjB,qBAEJ,8BAGY,8BACI,cAAC,EAAD,CAAM7F,GAAIlB,EAAUiB,QAAS+E,EAAYpG,MAAOuD,aAjD3D,SAAC1G,GAClBiC,EAAUS,QAAQoH,KAAK,cAAe,CAAEL,OAAQA,EAAQzJ,UAAWA,cAM3D,8BACM2J,EAME,gCACI,cAAC,EAAD,CAAMtG,eAAgBA,EAAgBE,SAAUA,IAChD,wBAAQH,QAAS,kBAAMwG,GAAcD,IAArC,2BAPJ,gCACI,uBAAOc,YAAa,eAAgB9B,MAAOpF,EAAUyF,SAAU,SAACT,GAAD,OAAWa,EAAYb,EAAMG,OAAOC,UACnG,wBAAQvF,QAAS4G,EAAjB,yBACA,wBAAQ5G,QAAS,kBAAMwG,GAAcD,IAArC,gCC2Cbe,EAhJH,WACV,IAAMtG,EAAWC,cACXlE,EAAOmE,aAAY,SAAAjF,GAAK,OAAIA,EAAMc,QAFxB,EAK4B2B,oBAAS,GALrC,mBAKT6I,EALS,KAKOC,EALP,OAM0B9I,oBAAS,GANnC,mBAMT+I,EANS,KAMMC,EANN,OAQgBhJ,mBAAS,IARzB,mBAQTiJ,EARS,KAQCC,EARD,OASgBlJ,mBAAS,IATzB,mBASTmJ,EATS,KASCC,EATD,KAYhB/I,qBAAU,WACR,IAAMgJ,EAAiBC,OAAOC,aAAaC,QAAQ,qBACnD,GAAIH,EAAgB,CAClB,IAAMhL,EAAOoL,KAAKC,MAAML,GACxB/G,EAASjF,EAAQgB,OAGlB,CAACiE,IAGJ,IAAMqH,EAAW,uCAAG,WAAOlD,GAAP,eAAA3H,EAAA,6DAClB2H,EAAMmD,iBADY,kBAGGC,EAAajL,MAAM,CACpCqK,WAAUE,aAJI,OAGV9K,EAHU,OAOhBiL,OAAOC,aAAaO,QAClB,oBAAqBL,KAAKM,UAAU1L,IAGtCiE,EAASjF,EAAQgB,IACjB6K,EAAY,IACZE,EAAY,IAbI,kDAehB1I,QAAQC,IAAR,MAfgB,0DAAH,sDAmBXqJ,EAAY,uCAAG,WAAOvD,GAAP,eAAA3H,EAAA,6DACnB2H,EAAMmD,iBADa,kBAGEK,EAAa/K,OAAO,CACrC+J,WAAUE,aAJK,OAGX9K,EAHW,OAOjBiL,OAAOC,aAAaO,QAClB,oBAAqBL,KAAKM,UAAU1L,IAGtCiE,EAASjF,EAAQgB,IACjB6K,EAAY,IACZE,EAAY,IAbK,kDAejB1I,QAAQC,IAAR,MAfiB,0DAAH,sDAmFlB,OACE,gCACE,cAAC,EAAD,IAEA,4CAEU,OAATtC,GAAiBwK,GA9DpB,uBAAMqB,SAAUF,EAAhB,UACE,2CAEI,uBACA7M,KAAK,OACL0J,MAAOoC,EACPkB,KAAK,WACLjD,SAAU,gBAAGN,EAAH,EAAGA,OAAH,OAAgBsC,EAAYtC,EAAOC,aAGjD,2CAEI,uBACA1J,KAAK,WACL0J,MAAOsC,EACPgB,KAAK,WACLjD,SAAU,gBAAGN,EAAH,EAAGA,OAAH,OAAgBwC,EAAYxC,EAAOC,aAGjD,wBAAQ1J,KAAK,SAAb,qBACA,wBAAQmE,QAAS,kBAAMwH,GAAmBD,IAA1C,uBA2CU,OAATxK,IAAkBwK,GAbrB,wBAAQvH,QAAS,kBAAMwH,GAAmBD,IAA1C,qBAeY,OAATxK,GAAiB0K,GAxCpB,uBAAMmB,SAAUP,EAAhB,UACE,2CAEI,uBACAxM,KAAK,OACL0J,MAAOoC,EACPkB,KAAK,WACLjD,SAAU,gBAAGN,EAAH,EAAGA,OAAH,OAAgBsC,EAAYtC,EAAOC,aAGjD,2CAEI,uBACA1J,KAAK,WACL0J,MAAOsC,EACPgB,KAAK,WACLjD,SAAU,gBAAGN,EAAH,EAAGA,OAAH,OAAgBwC,EAAYxC,EAAOC,aAGjD,wBAAQ1J,KAAK,SAAb,mBACA,wBAAQmE,QAAS,kBAAM0H,GAAkBD,IAAzC,uBAqBU,OAAT1K,IAAkB0K,GAbrB,wBAAQzH,QAAS,kBAAM0H,GAAkBD,IAAzC,mBAeY,OAAT1K,GAAiB,wBAAQiD,QAAS,kBA3ErCgI,OAAOC,aAAahE,aACpBjD,EAASjF,EAAQ,QA0EG,yBC/IxB+M,IAASC,OACP,cAAC,IAAD,CAAU9L,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEF+L,SAASC,eAAe,W","file":"static/js/main.fce61c2e.chunk.js","sourcesContent":["\nconst initialState = {\n    gameGrid: [],\n    playerNumber: 1,\n    playerTurn:1,\n    colorNumber: 5,\n    w: 10,\n    h: 10,\n}\n\nconst gameStateReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SET_GAMESTATE':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport const setGameState = (data) => {\n    return {\n        type: 'SET_GAMESTATE',\n        data: data\n    }\n}\n\nconst gridReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_GRID':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport const setGameGrid = (data) => {\n    return {\n        type: 'SET_GRID',\n        data: data\n    }\n}\n\nconst playerTurnReducer = (state = 1, action) => {\n    switch (action.type) {\n        case 'SET_PLAYERTURN':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport const setPlayerTurn = (data) => {\n\n    return {\n        type: 'SET_PLAYERTURN',\n        data: data\n    }\n}\n\nconst gameVisibleReducer = (state = false, action) => {\n    switch (action.type) {\n        case 'SET_GAME_VISIBLE':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport const setGameVisible = (data) => {\n\n    return {\n        type: 'SET_GAME_VISIBLE',\n        data: data\n    }\n}\n\nconst userReducer = (state = null, action) => {\n    switch (action.type) {\n        case 'SET_USER':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport const setUser = (data) => {\n\n    return {\n        type: 'SET_USER',\n        data: data\n    }\n}\n\nconst playerNumberReducer = (state = 0, action) => {\n    switch (action.type) {\n        case 'SET_PLAYER_NUMBER':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport const setPlayerNumber = (data) => {\n\n    return {\n        type: 'SET_PLAYER_NUMBER',\n        data: data\n    }\n}\n\nconst colorNumberReducer = (state = 5, action) => {\n    switch (action.type) {\n        case 'SET_COLOR_NUMBER':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport const setColorNumber = (data) => {\n\n    return {\n        type: 'SET_COLOR_NUMBER',\n        data: data\n    }\n}\n\nconst dimReducer = (state = {'w': 20, 'h': 20}, action) => {\n    switch (action.type) {\n        case 'SET_DIM':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport const setDim = (data) => {\n\n    return {\n        type: 'SET_DIM',\n        data: data\n    }\n}\n\n\nexport default {\n    gameStateReducer,\n    gridReducer,\n    // availableColorsReducer,\n    playerTurnReducer,\n    gameVisibleReducer,\n    userReducer,\n    playerNumberReducer,\n    colorNumberReducer,\n    dimReducer\n}\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\n\nimport mainReducer from './reducers/mainReducer'\n\n\nconst reducer = combineReducers({\n  gameState: mainReducer.gameStateReducer,\n  gameGrid: mainReducer.gridReducer,\n//   availableColors: mainReducer.availableColorsReducer,\n  playerTurn: mainReducer.playerTurnReducer,\n  gameVisible: mainReducer.gameVisibleReducer,\n  user: mainReducer.userReducer,\n  playerNumber: mainReducer.playerNumberReducer,\n  colorNumber: mainReducer.colorNumberReducer,\n  dim: mainReducer.dimReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst signUp = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { signUp }","import axios from 'axios'\n\nconst baseUrl = '/api/rooms'\n\n\nconst getAll = async () => {\n    const response = await axios.get(`${baseUrl}`)\n    return response\n}\n\nconst create = async newRoom => {\n    const response = await axios.post(baseUrl, newRoom)\n    return response.data\n}\n\nconst remove = async (id) => {\n    const response = await axios.delete(`${baseUrl}/${id}`)\n    return response.data\n}\n\nconst join = async (id, roomObject) => {\n    const response = await axios.put(`${baseUrl}/${id}`, roomObject)\n    return response.data\n}\n\n\n\nexport default { getAll, create, remove, join }","import { useEffect, useRef, useState } from \"react\";\nimport roomService from '../services/room'\nimport socketIOClient from \"socket.io-client\"\nconst SOCKET_SERVER_URL = \"http://localhost:3001\"\n\n\nconst Join = (props) => {\n\n    const [roomsAvailable, setRoomsAvailable] = useState([])\n    const socketRef = useRef()\n\n\n    useEffect(() => {\n        roomService\n            .getAll()\n            .then(response => {\n                setRoomsAvailable(response.data)\n            })\n            .catch(error => {\n                console.log('fail')\n            })\n\n        // socketRef.current = socketIOClient(SOCKET_SERVER_URL)\n        socketRef.current = socketIOClient()\n\n\n        socketRef.current.on('update_showrooms_fromserver', (room) => {\n            console.log('CLIENT SAI PÄIVITYKSEN UUDESTA HUONEESTA', room)\n            setRoomsAvailable(roomsAvailable => [...roomsAvailable, room])\n        })\n\n        socketRef.current.on('update_showrooms', (room) => {\n            setRoomsAvailable(roomsAvailable => roomsAvailable.map(r => r.id === room.id ? room : r))\n        })\n\n        return () => socketRef.current.disconnect()\n\n    }, [])\n\n    return (\n        <div>\n            <ul>\n                {roomsAvailable.map(room => {\n                    return (\n                        <li key={room.id}>{room.roomName} --- {room.host} --- {room.users}\n                            <button onClick={() => props.handleJoinRoom({ ...room, users: room.users.concat(props.userName) })}>Join</button></li>\n\n                    )\n                }\n                )}\n            </ul>\n        </div>\n    )\n}\n\nexport default Join","import React, { useRef, useEffect } from 'react'\n\nconst GameBoard = props => {\n\n    const canvasRef = useRef(null)\n\n    const draw = props.draw\n\n    useEffect(() => {\n\n        const canvas = canvasRef.current\n        const context = canvas.getContext('2d')\n\n        //Our draw come here\n        draw(context)\n    }, [draw])\n\n\n\n    const boardStyle = {\n        outline: \"black 2px solid\",\n        marginLeft: '2px'\n    }\n\n    return (\n        <canvas ref={canvasRef} width={props.width} height={props.height} style={boardStyle}> </canvas>\n    )\n\n}\n\nexport default GameBoard","import React, { useState, useEffect } from 'react'\nimport GameBoard from './GameBoard.js'\nimport saveService from '../services/saves'\nimport DropdownMenu from './DropdownMenu'\n\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setGameGrid, setPlayerTurn, setGameVisible, setPlayerNumber, setColorNumber, setGameState } from '../reducers/mainReducer'\n\n\nconst Game = props => {\n\n    const dispatch = useDispatch()\n    const gameState = useSelector(state => state.gameState)\n    const gameVisible = useSelector(state => state.gameVisible)\n    const user = useSelector(state => state.user)\n\n\n\n    // const gameGrid = useSelector(state => state.gameGrid)\n    // const playerTurn = useSelector(state => state.playerTurn)\n    // const playerNumber = useSelector(state => state.playerNumber)\n    // const colorNumber = useSelector(state => state.colorNumber)\n    // const dim = useSelector(state => state.dim)\n\n    const [saves, setSaves] = useState([])\n\n    // useEffect(() => {\n    //     if (user) {\n    //         saveService\n    //             .getAll()\n    //             .then(response => {\n    //                 console.log('useeffect hankkii datan:', response.data)\n    //                 setSaves(response.data)\n    //             })\n    //             .catch(error => {\n    //                 console.log('fail')\n    //             })\n    //     }\n    //     else {\n    //         setSaves([])\n    //     }\n    // }, [user])\n\n    const getAvailableColors = (grid, cn, pn) => {\n        if (grid.length === 0) return []\n        const pColors = []\n        for (let i = 0; i < cn; i++) pColors.push(i + 1)\n\n        if (pn === 1) return pColors.filter(c => c !== grid[0][0][0])\n        else return pColors.filter(c => c !== grid[0][0][0] && c !== grid[grid.length - 1][grid[0].length - 1][0])\n    }\n\n    const myTurn = props.players[gameState.playerTurn - 1] === props.me\n    const availableColors = gameState.gameGrid ? getAvailableColors(gameState.gameGrid, gameState.colorNumber, gameState.playerNumber) : []\n\n\n    // const addSaveGame = async () => {\n\n    //     const saveObject = {\n    //         data: gameGrid,\n    //         playerNumber: playerNumber,\n    //         playerTurn: playerTurn,\n    //         colorNumber: colorNumber\n    //     }\n\n    //     try {\n    //         const newSave = await saveService.create(saveObject)\n    //         setSaves(saves.concat(newSave))\n    //         console.log(newSave)\n\n\n    //     } catch (exception) {\n    //         console.log(exception)\n    //     }\n    // }\n\n    // const loadSaveGameById = async (id) => {\n\n    //     try {\n    //         const loadFile = await saveService.getId(id)\n    //         dispatch(setPlayerTurn(loadFile.playerTurn))\n    //         dispatch(setPlayerNumber(loadFile.playerNumber))\n    //         dispatch(setColorNumber(loadFile.colorNumber))\n    //         dispatch(setGameGrid(loadFile.data))\n    //         //dispatch(setAvailableColors(getAvailableColors(loadFile.data, loadFile.colorNumber, loadFile.playerNumber)))\n\n\n    //     } catch (exception) {\n    //         console.log(exception)\n    //     }\n    // }\n\n    const startingPoint = gameState.playerTurn && gameState.playerTurn === 1 ? [0, 0] : [gameState.gameGrid[0].length - 1, gameState.gameGrid.length - 1]\n\n\n    const checkNeighbour = (grid, x, y) => {\n        if (x === -1) return false\n        else if (y === -1) return false\n        else if (x === grid[0].length) return false\n        else if (y === grid.length) return false\n        else return true\n    }\n\n    const draw = ctx => {\n        ctx.clearRect(0, 0, gameState.gameGrid[0].length * 15, gameState.gameGrid.length * 15)\n\n        for (let x = 0; x < gameState.gameGrid[0].length; x++) {\n            for (let y = 0; y < gameState.gameGrid.length; y++) {\n\n                ctx.fillStyle = getColor(gameState.gameGrid[y][x][0])\n                //ctx.shadowColor = 'black'\n                //ctx.shadowBlur = 4 ;\n                ctx.fillRect(x * 15, y * 15, 15, 15)\n\n                if (checkNeighbour(gameState.gameGrid, x + 1, y) && gameState.gameGrid[y][x][0] !== gameState.gameGrid[y][x + 1][0]) {\n                    ctx.beginPath();\n                    ctx.strokeStyle = \"black\";\n                    ctx.moveTo(x * 15 + 15, y * 15);\n                    ctx.lineTo(x * 15 + 15, y * 15 + 15);\n                    ctx.stroke();\n                    ctx.closePath()\n                }\n                if (checkNeighbour(gameState.gameGrid, x, y + 1) && gameState.gameGrid[y][x][0] !== gameState.gameGrid[y + 1][x][0]) {\n                    ctx.beginPath();\n                    ctx.strokeStyle = \"black\";\n                    ctx.moveTo(x * 15, y * 15 + 15);\n                    ctx.lineTo(x * 15 + 15, y * 15 + 15);\n                    ctx.stroke();\n                    ctx.closePath()\n\n                }\n            }\n        }\n    }\n\n    const getColor = colorIndex => {\n        switch (colorIndex) {\n            case 1:\n                return '#ff3300' //red\n            case 2:\n                return '#0000ff' //blue\n            case 3:\n                return '#00ff00' //green\n            case 4:\n                return '#ffff00' //yellow\n            case 5:\n                return '#cc00cc' //purple\n            case 6:\n                return 'turquoise'\n            default:\n                return 'black'\n        }\n    }\n\n\n    const randomizeGrid = (w, h) => {\n        let grid = []\n        let previous = [1, 0]\n\n        for (let y = 0; y < h; y++) {\n            grid.push([])\n\n            for (let x = 0; x < w; x++) {\n                let rand = [1, 0]\n                if (Math.random() < 0.09 && x !== 0) rand = previous\n                else if (Math.random() < 0.09 && y !== 0) rand = [grid[y - 1][x][0], 0]\n                else rand = [Math.floor(Math.random() * gameState.colorNumber) + 1, 0]\n\n                previous = rand\n                grid[y].push(rand)\n\n            }\n        }\n        return grid\n    }\n\n    const gameIsValid = (g) => {\n\n        if (g[0][0][0] === g[1][0][0] || g[0][0][0] === g[0][1][0]) return true\n\n        else if (gameState.playerNumber === 2 && (g[g.length - 1][g[0].length - 1][0] === g[g.length - 2][g[0].length - 1][0] || g[g.length - 1][g[0].length - 1][0] === g[g.length - 1][g[0].length - 2][0])) {\n            return true\n        }\n\n        else if (gameState.playerNumber === 2 && (g[g.length - 1][g[0].length - 1][0] === g[0][0][0])) {\n            return true\n        }\n\n        else return false\n    }\n\n    const newGame = (w, h) => {\n        let newGrid = []\n        do {\n            newGrid = randomizeGrid(w, h).slice(0)\n            newGrid[0][0] = [newGrid[0][0][0], 1]\n\n            if (gameState.playerNumber === 2) newGrid[h - 1][w - 1] = [newGrid[h - 1][w - 1][0], 2]\n\n            //dispatch(setAvailableColors(getAvailableColors(newGrid, colorNumber)))\n\n        } while (gameIsValid(newGrid))\n\n        const newGameState = {\n            ...gameState,\n            gameGrid: newGrid.slice(0),\n            playerTurn: 1,\n        }\n\n        dispatch(setGameState(newGameState))\n        props.handleUpdate(newGameState)\n        //dispatch(setGameGrid(newGrid.slice(0)))\n    }\n\n    const changeTurn = () => {\n        const newTurn = gameState.playerNumber === 1 ? 1 : gameState.playerTurn === 1 ? 2 : 1\n        return newTurn\n        //dispatch(setPlayerTurn(newTurn))\n    }\n\n    const gameIsOver = (grid) => {\n        const tGrid = grid.map(a => a.map(b => b[1])).flat()\n\n        if (tGrid.filter(x => x === 0).length === 0) return true\n        return false\n    }\n\n    var tempGrid = []\n\n    const recursionfunc = (x, y, color) => {\n\n        // Jos on vierailtu jo\n        if (tempGrid[y][x][2] === true) {\n            return\n        }\n\n        else if (gameState.playerNumber === 2 && tempGrid[y][x][1] !== 0 && tempGrid[y][x][1] !== gameState.playerTurn) {\n            tempGrid[y][x][2] = true\n            return\n        }\n\n        // Jos on oma palikka\n        else if (tempGrid[y][x][1] === gameState.playerTurn) {\n            // Ruudussa on nyt vierailtu\n            tempGrid[y][x][2] = true\n\n            if (x !== 0) recursionfunc(x - 1, y, color)\n            if (y !== 0) recursionfunc(x, y - 1, color)\n            if (x !== tempGrid[0].length - 1) recursionfunc(x + 1, y, color)\n            if (y !== tempGrid.length - 1) recursionfunc(x, y + 1, color)\n            return\n        }\n\n        // Jos ruudussa ei ole vierailtu eikä ole oma palikka, mutta on saman värinen\n        else if (tempGrid[y][x][0] === color) {\n\n            // Ruudussa on nyt vierailtu ja se on merkitty omaksi palikaksi\n            tempGrid[y][x][2] = true\n            tempGrid[y][x][1] = gameState.playerTurn\n\n            if (x !== 0) recursionfunc(x - 1, y, color)\n            if (y !== 0) recursionfunc(x, y - 1, color)\n            if (x !== tempGrid[0].length - 1) recursionfunc(x + 1, y, color)\n            if (y !== tempGrid.length - 1) recursionfunc(x, y + 1, color)\n            return\n        }\n        // Jos ruudussa ei ole vierailtu, eikä se ole oma, eikä se ole saman värinen\n        else {\n            // Ruudussa on nyt vierailtu\n            tempGrid[y][x][2] = true\n            return\n        }\n    }\n\n    const playTurn = (col) => {\n        const colorChangedGrid = gameState.gameGrid.map(a => a.map(b => b[1] === gameState.playerTurn ? [col, gameState.playerTurn] : b))\n        tempGrid = colorChangedGrid.map(a => a.map(b => [...b, false]))\n        recursionfunc(startingPoint[0], startingPoint[1], col)\n        const tempToOriginal = tempGrid.map(a => a.map(b => [b[0], b[1]]))\n\n        const newGameState = {\n            ...gameState,\n            gameGrid: tempToOriginal,\n            playerTurn: changeTurn()\n        }\n        dispatch(setGameState(newGameState))\n        props.handleUpdate(newGameState)\n\n        //dispatch(setGameGrid(tempToOriginal))\n\n        if (gameIsOver(tempToOriginal)) alert('voitit')\n\n        //dispatch(setAvailableColors(getAvailableColors(tempToOriginal, colorNumber)))\n        //changeTurn()\n    }\n\n\n\n    const playTurnButtonHandler = col => {\n        playTurn(col)\n    }\n\n    const newGameButtonHandler = () => {\n        newGame(gameState.w, gameState.h)\n        dispatch(setGameVisible(true))\n        // props.setSettingsVisible(false)\n    }\n\n    const endGameButtonHandler = () => {\n        dispatch(setGameVisible(false))\n        // props.setSettingsVisible(true)\n    }\n\n    // const saveGameButtonHandler = () => {\n    //     console.log('saves')\n    //     addSaveGame()\n    // }\n\n\n    const buttonstyle = {\n        height: '50px',\n        width: '50px',\n    }\n\n    return (\n\n        <div>\n            <div style={{ marginTop: '5px' }}>\n                {\n                    gameVisible ?\n                        <div>\n                            <button onClick={newGameButtonHandler} style={{ float: 'left' }}>New Game!</button>\n                            <button onClick={endGameButtonHandler} style={{ float: 'left' }}>Settings</button>\n                            {/* <button onClick={saveGameButtonHandler} style={{ float: 'left' }}>Save</button>\n                            <DropdownMenu loadFiles={saves} loadFunc={loadSaveGameById}></DropdownMenu> */}\n                        </div> :\n                        <div>\n                            <button onClick={newGameButtonHandler}>New Game!</button>\n                        </div>\n                }\n            </div>\n            <div style={{ clear: 'left' }}></div>\n            {gameVisible ?\n                <div>\n                    <div>\n                        {myTurn ?\n                            availableColors.map(color => {\n                                return <button\n                                    style={{\n                                        marginTop: '5px',\n                                        marginBottom: '6px',\n                                        marginRight: '5px',\n                                        //border: getColor(color),\n                                        backgroundColor: getColor(color),\n                                        ...buttonstyle\n                                    }}\n                                    key={color}\n                                    onClick={() => playTurnButtonHandler(color)}>\n                                </button>\n                            })\n                            : ''}\n                    </div>\n                    <GameBoard\n                        width={gameState.gameGrid[0].length * 15}\n                        height={gameState.gameGrid.length * 15}\n                        draw={draw}>\n                    </GameBoard>\n                </div> : ''}\n\n        </div>\n    )\n}\n\nexport default Game","import { useEffect, useRef, useState } from \"react\";\nimport Game from './Game.js'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setPlayerNumber, setColorNumber, setDim, setGameState } from '../reducers/mainReducer'\n\n\n\nconst Settings = (props) => {\n    const dispatch = useDispatch()\n    const gameVisible = useSelector(state => state.gameVisible)\n    // const playerNumber = useSelector(state => state.playerNumber)\n    const gameState = useSelector(state => state.gameState)\n\n    const [settings, setSettings] = useState({ 'w': 10, 'h': 10, 'cn': 5, 'pn': 1 })\n\n    const handleSettingsChange = (event, component) => {\n        if (component === 'w') setSettings({ ...settings, 'w': Number(event.target.value) })\n        if (component === 'h') setSettings({ ...settings, 'h': Number(event.target.value) })\n        if (component === 'cn') setSettings({ ...settings, 'cn': Number(event.target.value) })\n        if (component === 'pn') setSettings({ ...settings, 'pn': Number(event.target.value) })\n    }\n    const handleSubmit = () => {\n        // dispatch(setColorNumber(settings['cn']))\n        // dispatch(setPlayerNumber(settings['pn']))\n        // dispatch(setDim({ 'w': settings['w'], 'h': settings['h'] }))\n        const newGameState = {\n            ...gameState,\n            w: settings['w'],\n            h: settings['h'],\n            colorNumber: settings['cn'],\n            playerNumber: settings['pn']\n        }\n        dispatch(setGameState(newGameState))\n    }\n\n    const textStyle = {\n        display: 'inline-block',\n        width: '50px'\n    }\n    const sliderStyle = {\n        display: 'inline-block',\n    }\n    const counterStyle = {\n        display: 'inline-block',\n    }\n\n    return (\n        <div>\n            {\n                !gameVisible ?\n                    <div>\n\n                        <div>\n                            <div style={textStyle}>Width</div>\n                            <input\n                                style={sliderStyle}\n                                type={'range'}\n                                min={10}\n                                max={100}\n                                value={settings['w']}\n                                onChange={(e) => handleSettingsChange(e, 'w')}\n                            />\n                            <div style={counterStyle}>{settings['w']}</div>\n                        </div>\n\n                        <div>\n                            <div style={textStyle}>Height</div>\n                            <input\n                                type={'range'}\n                                min={10}\n                                max={100}\n                                value={settings['h']}\n                                onChange={(e) => handleSettingsChange(e, 'h')}\n                            />\n                            {settings['h']}\n                        </div>\n                        <div>\n                            <div style={textStyle}>Colors</div>\n                            <input\n                                type={'range'}\n                                min={3}\n                                max={6}\n                                value={settings['cn']}\n                                onChange={(e) => handleSettingsChange(e, 'cn')}\n                            />\n                            {settings['cn']}\n                        </div>\n                        <div>\n                            <div style={textStyle}>Players</div>\n                            <input\n                                type={'range'}\n                                min={1}\n                                max={2}\n                                value={settings['pn']}\n                                onChange={(e) => handleSettingsChange(e, 'pn')}\n                            />\n                            {settings['pn']}\n                        </div>\n                        <div><button onClick={() => handleSubmit()}>Save Settings</button></div>\n                    </div> : ''\n            }\n\n        </div>\n    )\n}\n\nexport default Settings","import { useEffect, useRef, useState } from \"react\"\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport roomService from '../services/room'\nimport Join from './Join'\nimport Settings from './Settings'\nimport Game from './Game.js'\nimport { setGameVisible, setGameState } from '../reducers/mainReducer'\nimport socketIOClient from \"socket.io-client\"\nconst SOCKET_SERVER_URL = \"http://localhost:3001\"\n\n//KORJAA: HOSTILLA EI PÄIVITY CURRENTROOM, KUN JOKU LIITTYY HUONEESEEN\n//KORJAA: KUN JOKU LIITTYY HUONEESEEN, 'SHOW ROOMS' KOHDASSA EI PÄIVITY MYÖSKÄÄN\n// --> YLIPÄÄTÄÄN KUN JOKU LIITTYY HUONEESEEN, PITÄÄ TÄMÄN KORVATA KAIKKIEN HUONEET\n\nconst Room = (props) => {\n    const dispatch = useDispatch()\n\n\n    const [userName, setUserName] = useState('')\n    const [chat, setChat] = useState('')\n\n    const [currentRoom, setCurrentRoom] = useState(null)\n    const [roomId, setRoomId] = useState(null)\n    const [showRooms, setShowRooms] = useState(false)\n    const socketRef = useRef()\n\n    useEffect(() => {\n        // socketRef.current = socketIOClient(SOCKET_SERVER_URL)\n        socketRef.current = socketIOClient()\n\n        roomId && isHost() && socketRef.current.emit('create', roomId)\n        roomId && !isHost() && socketRef.current.emit('join', { roomId: roomId, roomObject: currentRoom })\n\n        roomId && socketRef.current.on('update_game', (data) => {\n            dispatch(setGameState(data))\n            dispatch(setGameVisible(true))\n        })\n\n\n        roomId && socketRef.current.on('update_room', (data) => {\n            setCurrentRoom(data)\n        })\n\n        return () => {\n            roomId && isHost() && handleLeaveHost()\n            socketRef.current.disconnect()\n        }\n    }, [roomId])\n\n    const handleCreate = async () => {\n        const createdRoom = await roomService.create({\n            userName: userName\n        })\n        setCurrentRoom(createdRoom)\n        setRoomId(createdRoom.id)\n        socketRef.current.emit('update_showrooms_toserver', createdRoom)\n    }\n\n    //OK, TOSIN EI POTKI MUITA POIS HUONEESTA... USEEFFECT RETURN?\n    const handleLeaveHost = async () => {\n        const deletedRoom = await roomService.remove(currentRoom.id)\n        setCurrentRoom(null)\n        setRoomId(null)\n    }\n\n\n    const handleLeave = async () => {\n        const roomObject = {\n            roomName: currentRoom.roomName,\n            host: currentRoom.host,\n            users: currentRoom.users.filter(u => u !== userName),\n            chatLog: currentRoom.chatLog\n        }\n        const updatedRoom = await roomService.join(currentRoom.id, roomObject)\n        socketRef.current.emit('update_room', { roomId: updatedRoom.id, roomObject: updatedRoom })\n        setCurrentRoom(null)\n        setRoomId(null)\n    }\n\n    const handleSendChat = async () => {\n        const roomObject = {\n            roomName: currentRoom.roomName,\n            host: currentRoom.host,\n            users: currentRoom.users,\n            chatLog: [...currentRoom.chatLog, [userName, chat]]\n        }\n        const updatedRoom = await roomService.join(currentRoom.id, roomObject)\n        socketRef.current.emit('update_room', { roomId: updatedRoom.id, roomObject: updatedRoom })\n    }\n\n    const isHost = () => {\n        if (currentRoom && currentRoom.host === userName) return true\n        return false\n    }\n\n    const handleJoinRoom = async (roomObject) => {\n        const joinedRoom = await roomService.join(roomObject.id, roomObject)\n        setCurrentRoom(joinedRoom)\n        setRoomId(joinedRoom.id)\n    }\n\n    const handleUpdate = (gameState) => {\n        socketRef.current.emit('update_game', { roomId: roomId, gameState: gameState })\n    }\n\n    return (\n        <div>\n            { !currentRoom ?\n                <div>\n                    {!showRooms ?\n                        <div>\n                            <input placeholder={'set username'} value={userName} onChange={(event) => setUserName(event.target.value)}></input>\n                            <button onClick={handleCreate}>Create room</button>\n                            <button onClick={() => setShowRooms(!showRooms)}>Show rooms</button>\n                        </div> :\n                        <div>\n                            <Join handleJoinRoom={handleJoinRoom} userName={userName} />\n                            <button onClick={() => setShowRooms(!showRooms)}>Hide rooms</button>\n                        </div>\n                    }\n                </div> :\n                <div>\n                    {isHost() ?\n                        <div>\n                            you are host in {currentRoom.roomName}\n                            <button onClick={handleLeaveHost}>Leave room</button>\n                            <div>\n                                <Settings />\n                            </div>\n                        </div> :\n                        <div>\n                            you are in {currentRoom.roomName}\n                            <button onClick={() => handleLeave()}>Leave</button>\n                        </div>}\n                    <div>\n                        <ul>\n                            <li>Chatti</li>\n                            {currentRoom.chatLog.map(m => {\n                                return (\n                                    <li key={m[0] + m[1]}>{m[0]} sanoi: {m[1]}</li>\n                                )\n                            })}\n                        </ul>\n                        <input placeholder={'say something'} value={chat} onChange={(event) => setChat(event.target.value)}></input>\n                        <button onClick={handleSendChat}>Send</button>\n                    </div>\n                    <div>\n                        {\n                            true ?\n                                <div>\n                                    <Game me={userName} players={currentRoom.users} handleUpdate={handleUpdate}>\n                                    </Game>\n                                </div> : ''\n                        }\n                    </div>\n\n                </div>\n            }\n\n        </div>\n    )\n}\n\nexport default Room","import React, { useState, useEffect, useRef } from 'react'\nimport loginService from './services/login'\nimport saveService from './services/saves'\nimport usersService from './services/users'\nimport Room from './components/Room.js'\n\n\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setUser, setPlayerNumber, setColorNumber, setDim } from './reducers/mainReducer'\n\n\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.user)\n\n\n  const [showSignUpForm, setShowSignupForm] = useState(false)\n  const [showLoginForm, setShowLoginForm] = useState(false)\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedFloodItUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(setUser(user))\n      //saveService.setToken(user.token)\n    }\n  }, [dispatch])\n\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedFloodItUser', JSON.stringify(user)\n      )\n      //saveService.setToken(user.token)\n      dispatch(setUser(user))\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      console.log(exception)\n    }\n  }\n\n  const handleSignUp = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await usersService.signUp({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedFloodItUser', JSON.stringify(user)\n      )\n      //saveService.setToken(user.token)\n      dispatch(setUser(user))\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      console.log(exception)\n    }\n  }\n\n  const handleLogOut = () => {\n    window.localStorage.clear()\n    dispatch(setUser(null))\n    //saveService.setToken(null)\n\n  }\n\n  const signUpForm = () => (\n    <form onSubmit={handleSignUp}>\n      <div>\n        username\n          <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password\n          <input\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">Sign Up</button>\n      <button onClick={() => setShowSignupForm(!showSignUpForm)}>Cancel</button>\n    </form>\n  )\n\n  const loginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n          <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password\n          <input\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">Login</button>\n      <button onClick={() => setShowLoginForm(!showLoginForm)}>Cancel</button>\n    </form>\n  )\n\n  const showSignUpOpenerButton = () => (\n    <button onClick={() => setShowSignupForm(!showSignUpForm)}>Sign Up</button>\n  )\n  const showLoginOpenerButton = () => (\n    <button onClick={() => setShowLoginForm(!showLoginForm)}>Login</button>\n  )\n\n  return (\n    <div>\n      <Room />\n\n      <div>Flood It!</div>\n\n      {user === null && showSignUpForm && signUpForm()}\n      {user === null && !showSignUpForm && showSignUpOpenerButton()}\n\n      {user === null && showLoginForm && loginForm()}\n      {user === null && !showLoginForm && showLoginOpenerButton()}\n\n      {user !== null && <button onClick={() => handleLogOut()}>Log Out</button>}\n\n      \n    </div>\n  )\n\n}\n\nexport default App;\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux' \nimport store from './store'\nimport App from './App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}